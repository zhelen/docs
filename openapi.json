{
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ValidationError": {
                "description": "Model of a validation error response.",
                "items": {
                    "$ref": "#/components/schemas/ValidationError.ValidationErrorElement"
                },
                "title": "ValidationError",
                "type": "array"
            },
            "ValidationError.ValidationErrorElement": {
                "description": "Model of a validation error response element.",
                "properties": {
                    "ctx": {
                        "title": "Error context",
                        "type": "object"
                    },
                    "loc": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Missing field name",
                        "type": "array"
                    },
                    "msg": {
                        "title": "Error message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error type",
                        "type": "string"
                    }
                },
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationErrorElement",
                "type": "object"
            },
            "AICell": {
                "additionalProperties": false,
                "properties": {
                    "ai_column_id": {
                        "title": "AI Column ID",
                        "description": "The unique ID of the column the cell belongs to",
                        "type": "integer"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "description": "The unique ID of the Document associated with the cell",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "description": "The unique ID of the cell",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "description": "Modification time, by UTC",
                        "type": "string"
                    },
                    "response": {
                        "title": "Response",
                        "description": "The AI's response to the user based on the column query of this cell, or a user-submitted response",
                        "type": "string"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID for internal use",
                        "type": "string"
                    },
                    "task_status": {
                        "title": "Task Status",
                        "description": "AI task status for this cell",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "ai_column_id",
                    "document_id",
                    "response",
                    "modified_at",
                    "meta",
                    "task_id",
                    "task_status"
                ],
                "title": "AICell",
                "type": "object"
            },
            "AICellCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "ai_column_id": {
                        "title": "AI Column ID",
                        "description": "The unique ID of the AI column that contains this cell",
                        "type": "integer"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "description": "The unique ID of the Document associated with the cell",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use",
                        "type": "object"
                    },
                    "response": {
                        "title": "Response",
                        "description": "The AI's response to the user based on the column query of this cell, or a user-submitted response",
                        "type": "string"
                    }
                },
                "required": [
                    "document_id",
                    "ai_column_id"
                ],
                "title": "AICellCreateBody",
                "type": "object"
            },
            "AICellList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AICell"
                },
                "title": "AICellList",
                "type": "array"
            },
            "AICellUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "response": {
                        "title": "Response",
                        "type": "string"
                    }
                },
                "required": [
                    "response"
                ],
                "title": "AICellUpdateBody",
                "type": "object"
            },
            "AIColumn": {
                "additionalProperties": false,
                "properties": {
                    "ai_table_id": {
                        "title": "AI Table ID",
                        "description": "The unique ID of the AI Table this column belongs to",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "description": "The unique ID of the column",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use. Note that the language and model settings for the column are here. Avoid changing the model to avoid unexpected costs",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "description": "Time the column was last modified, in UTC",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "The displayed name of the column",
                        "type": "string"
                    },
                    "order_id": {
                        "title": "Order ID",
                        "description": "The displayed order of the column in the UI",
                        "type": "number"
                    },
                    "query": {
                        "title": "Query",
                        "description": "The user-provided query to the AI",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "query",
                    "meta",
                    "modified_at",
                    "order_id"
                ],
                "title": "AIColumn",
                "type": "object"
            },
            "AIColumnBody": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use. Note that the language and model settings for the column are here. Avoid changing the model to avoid unexpected costs",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "description": "The displayed name of the column",
                        "type": "string"
                    },
                    "order_id": {
                        "title": "Order ID",
                        "description": "The displayed order of the column in the UI",
                        "type": "number"
                    },
                    "query": {
                        "title": "Query",
                        "description": "The user-provided query to the AI",
                        "type": "string"
                    }
                },
                "title": "AIColumnBody",
                "type": "object"
            },
            "AIColumnList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AIColumn"
                },
                "title": "AIColumnList",
                "type": "array"
            },
            "AICreateProject": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "generate_template_task_id": {
                        "title": "Generate Template Task ID",
                        "type": "string"
                    },
                    "generate_template_task_status": {
                        "title": "Generate Template Task Status",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "project_type": {
                        "title": "Project Type",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "topic_main_points": {
                        "title": "Topic Main Points",
                        "type": "string"
                    },
                    "topic_summary": {
                        "title": "Topic Summary",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "user_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "project_type",
                    "title",
                    "topic_summary",
                    "topic_main_points",
                    "document_ids",
                    "generate_template_task_id",
                    "generate_template_task_status"
                ],
                "title": "AICreateProject",
                "type": "object"
            },
            "AICreateProjectCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "project_type": {
                        "title": "Project Type",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "topic_main_points": {
                        "title": "Topic Main Points",
                        "type": "string"
                    },
                    "topic_summary": {
                        "title": "Topic Summary",
                        "type": "string"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id",
                    "project_type"
                ],
                "title": "AICreateProjectCreateBody",
                "type": "object"
            },
            "AICreateProjectDocQA": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project ID",
                        "type": "integer"
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "query_task_id": {
                        "title": "Query Task ID",
                        "type": "string"
                    },
                    "query_task_status": {
                        "title": "Query Task Status",
                        "type": "string"
                    },
                    "response": {
                        "title": "Response",
                        "type": "string"
                    },
                    "response_task_id": {
                        "title": "Response Task ID",
                        "type": "string"
                    },
                    "response_task_status": {
                        "title": "Response Task Status",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "project_id",
                    "document_id",
                    "query",
                    "response",
                    "query_task_id",
                    "query_task_status",
                    "response_task_id",
                    "response_task_status"
                ],
                "title": "AICreateProjectDocQA",
                "type": "object"
            },
            "AICreateProjectDocQAList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AICreateProjectDocQAList.AICreateProjectDocQA"
                },
                "title": "AICreateProjectDocQAList",
                "type": "array"
            },
            "AICreateProjectDocQAList.AICreateProjectDocQA": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project ID",
                        "type": "integer"
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "query_task_id": {
                        "title": "Query Task ID",
                        "type": "string"
                    },
                    "query_task_status": {
                        "title": "Query Task Status",
                        "type": "string"
                    },
                    "response": {
                        "title": "Response",
                        "type": "string"
                    },
                    "response_task_id": {
                        "title": "Response Task ID",
                        "type": "string"
                    },
                    "response_task_status": {
                        "title": "Response Task Status",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "project_id",
                    "document_id",
                    "query",
                    "response",
                    "query_task_id",
                    "query_task_status",
                    "response_task_id",
                    "response_task_status"
                ],
                "title": "AICreateProjectDocQA",
                "type": "object"
            },
            "AICreateProjectDocQAUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "response": {
                        "title": "Response",
                        "type": "string"
                    }
                },
                "required": [
                    "response"
                ],
                "title": "AICreateProjectDocQAUpdateBody",
                "type": "object"
            },
            "AICreateProjectDocumentList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AICreateProjectDocumentList.AICreateProjectDocument"
                },
                "title": "AICreateProjectDocumentList",
                "type": "array"
            },
            "AICreateProjectDocumentList.AICreateProjectDocument": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "generate_queries_task_id": {
                        "title": "Generate Queries Task ID",
                        "type": "string"
                    },
                    "generate_queries_task_status": {
                        "title": "Generate Queries Task Status",
                        "type": "string"
                    },
                    "project_id": {
                        "title": "Project ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "created_at",
                    "project_id",
                    "document_id",
                    "generate_queries_task_id",
                    "generate_queries_task_status"
                ],
                "title": "AICreateProjectDocument",
                "type": "object"
            },
            "AICreateProjectList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AICreateProjectList.AICreateProject"
                },
                "title": "AICreateProjectList",
                "type": "array"
            },
            "AICreateProjectList.AICreateProject": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "generate_template_task_id": {
                        "title": "Generate Template Task ID",
                        "type": "string"
                    },
                    "generate_template_task_status": {
                        "title": "Generate Template Task Status",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "project_type": {
                        "title": "Project Type",
                        "type": "string"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "topic_main_points": {
                        "title": "Topic Main Points",
                        "type": "string"
                    },
                    "topic_summary": {
                        "title": "Topic Summary",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "user_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "project_type",
                    "title",
                    "topic_summary",
                    "topic_main_points",
                    "document_ids",
                    "generate_template_task_id",
                    "generate_template_task_status"
                ],
                "title": "AICreateProject",
                "type": "object"
            },
            "AICreateProjectListQuery": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "AICreateProjectListQuery",
                "type": "object"
            },
            "AICreateProjectNewQABody": {
                "additionalProperties": false,
                "properties": {
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "qa_type": {
                        "title": "Qa Type",
                        "type": "string"
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    }
                },
                "required": [
                    "document_id",
                    "qa_type"
                ],
                "title": "AICreateProjectNewQABody",
                "type": "object"
            },
            "AICreateProjectUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    },
                    "topic_main_points": {
                        "title": "Topic Main Points",
                        "type": "string"
                    },
                    "topic_summary": {
                        "title": "Topic Summary",
                        "type": "string"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "type": "string"
                    }
                },
                "title": "AICreateProjectUpdateBody",
                "type": "object"
            },
            "AICreateTemplateBlock": {
                "additionalProperties": false,
                "properties": {
                    "ai_example": {
                        "title": "Ai Example",
                        "type": "string"
                    },
                    "ai_prompt": {
                        "title": "Ai Prompt",
                        "type": "string"
                    },
                    "block_type": {
                        "title": "Block Type",
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project ID",
                        "type": "integer"
                    },
                    "response_task_id": {
                        "title": "Response Task ID",
                        "type": "string"
                    },
                    "response_task_status": {
                        "title": "Response Task Status",
                        "type": "string"
                    },
                    "sort_order": {
                        "title": "Sort Order",
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "project_id",
                    "block_type",
                    "sort_order",
                    "content"
                ],
                "title": "AICreateTemplateBlock",
                "type": "object"
            },
            "AICreateTemplateBlockCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "ai_example": {
                        "title": "Ai Example",
                        "type": "string"
                    },
                    "ai_prompt": {
                        "title": "Ai Prompt",
                        "type": "string"
                    },
                    "block_type": {
                        "title": "Block Type",
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "sort_order": {
                        "title": "Sort Order",
                        "type": "number"
                    }
                },
                "required": [
                    "block_type"
                ],
                "title": "AICreateTemplateBlockCreateBody",
                "type": "object"
            },
            "AICreateTemplateBlockList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AICreateTemplateBlockList.AICreateTemplateBlock"
                },
                "title": "AICreateTemplateBlockList",
                "type": "array"
            },
            "AICreateTemplateBlockList.AICreateTemplateBlock": {
                "additionalProperties": false,
                "properties": {
                    "ai_example": {
                        "title": "Ai Example",
                        "type": "string"
                    },
                    "ai_prompt": {
                        "title": "Ai Prompt",
                        "type": "string"
                    },
                    "block_type": {
                        "title": "Block Type",
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "project_id": {
                        "title": "Project ID",
                        "type": "integer"
                    },
                    "response_task_id": {
                        "title": "Response Task ID",
                        "type": "string"
                    },
                    "response_task_status": {
                        "title": "Response Task Status",
                        "type": "string"
                    },
                    "sort_order": {
                        "title": "Sort Order",
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "project_id",
                    "block_type",
                    "sort_order",
                    "content"
                ],
                "title": "AICreateTemplateBlock",
                "type": "object"
            },
            "AICreateTemplateBlockUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "ai_example": {
                        "title": "Ai Example",
                        "type": "string"
                    },
                    "ai_prompt": {
                        "title": "Ai Prompt",
                        "type": "string"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "sort_order": {
                        "title": "Sort Order",
                        "type": "number"
                    }
                },
                "title": "AICreateTemplateBlockUpdateBody",
                "type": "object"
            },
            "AIQA": {
                "additionalProperties": false,
                "properties": {
                    "ai_session_id": {
                        "title": "AI Session ID",
                        "description": "The unique ID of the AI Session this message belongs to",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description": "Time of message creation, in UTC",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "description": "Unique ID of this message",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use",
                        "type": "object"
                    },
                    "query": {
                        "title": "Query",
                        "description": "The user-provided message to the AI",
                        "type": "string"
                    },
                    "response": {
                        "title": "Response",
                        "description": "The AI's response to the user",
                        "type": "string"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID for internal use",
                        "type": "string"
                    },
                    "task_status": {
                        "title": "Task Status",
                        "description": "Progress on obtaining a response from the AI",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "ID of user who submitted the message",
                        "type": "integer"
                    },
                    "user_rating": {
                        "title": "User Rating",
                        "description": "User's assessment of the AI response",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "ai_session_id",
                    "user_id",
                    "task_id",
                    "user_rating",
                    "created_at",
                    "query",
                    "meta",
                    "task_status"
                ],
                "title": "AIQA",
                "type": "object"
            },
            "AIQABody": {
                "additionalProperties": false,
                "properties": {
                    "chat_model": {
                        "title": "Chat Model",
                        "description": "The model of AI to use. Defaults to gpt-3.5-turbo for single-doc chat, and gpt-3.5-turbo-16k for multi-doc chat. Do not change unless you are will to incur potentially much higher costs",
                        "type": "string"
                    },
                    "language": {
                        "title": "Language",
                        "description": "Desired language of the AI response",
                        "default": "English (US)",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use",
                        "type": "object"
                    },
                    "query": {
                        "title": "Query",
                        "description": "Your chat message to the AI",
                        "type": "string"
                    },
                    "restrict_to_context": {
                        "title": "Restrict To Context",
                        "description": "Whether to only use information from the document(s) in this Session",
                        "default": "True",
                        "type": "boolean"
                    },
                    "use_cells": {
                        "title": "Use Cells",
                        "description": "Whether to use information from AI Cells associated with Documents from this Sesssion",
                        "default": "True",
                        "type": "boolean"
                    },
                    "use_context": {
                        "title": "Use Context",
                        "description": "Whether to use information from the document(s) in this Session. Cannot be False if restrict_to_context is True",
                        "default": "True",
                        "type": "boolean"
                    },
                    "use_history": {
                        "title": "Use History",
                        "description": "Whether the new AI response should be related to the previous chat history",
                        "default": "True",
                        "type": "boolean"
                    },
                    "use_meta": {
                        "title": "Use Meta",
                        "description": "Whether to use the metadata of the document(s) in this Session",
                        "default": "True",
                        "type": "boolean"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "AIQABody",
                "type": "object"
            },
            "AIQAList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AIQA"
                },
                "title": "AIQAList",
                "type": "array"
            },
            "AIQAUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "user_rating": {
                        "title": "User Rating",
                        "type": "string"
                    }
                },
                "title": "AIQAUpdateBody",
                "type": "object"
            },
            "AIRowListQuery": {
                "additionalProperties": false,
                "properties": {
                    "collection_id": {
                        "title": "Collection ID",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "title": "AIRowListQuery",
                "type": "object"
            },
            "AIRowRunBody": {
                "additionalProperties": false,
                "properties": {
                    "collection_id": {
                        "title": "Collection ID",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "title": "AIRowRunBody",
                "type": "object"
            },
            "AISession": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "description": "Creation time, by UTC",
                        "type": "string"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "description": "List of Document IDs in this Session",
                        "type": "array"
                    },
                    "id": {
                        "title": "ID",
                        "description": "Unique ID of this Session",
                        "type": "integer"
                    },
                    "is_multidoc": {
                        "title": "Is Multidoc",
                        "description": "Whether this is a multi-doc chat session",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Session metadata, for internal use",
                        "type": "object"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "description": "Unique ID of Organization",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "Unique ID of user",
                        "type": "integer"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "description": "Whether this session can only be seen by its creator, or by the whole Workspace",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "user_id",
                    "is_multidoc",
                    "visibility",
                    "created_at",
                    "meta"
                ],
                "title": "AISession",
                "type": "object"
            },
            "AISessionCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "description": "The IDs of the documents to include in this chat Session",
                        "type": "array"
                    },
                    "is_multidoc": {
                        "title": "Is Multidoc",
                        "description": "Whether this is a multi-doc chat session. A multi-doc session can have only one (or zero) Documents in it, but a single-doc session cannot have more than one Document",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Session metadata, for internal use",
                        "type": "object"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "description": "The Organization in which to create the session",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "The user's unique ID",
                        "type": "integer"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "description": "Whether this session can only be seen by its creator, or by the whole Workspace",
                        "type": "string",
                        "enum": [
                            "shared",
                            "private"
                        ],
                        "default": "shared"
                    }
                },
                "required": [
                    "organization_id",
                    "user_id",
                    "is_multidoc"
                ],
                "title": "AISessionCreateBody",
                "type": "object"
            },
            "AISessionList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AISession"
                },
                "title": "AISessionList",
                "type": "array"
            },
            "AISessionListQuery": {
                "additionalProperties": false,
                "properties": {
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "AISessionListQuery",
                "type": "object"
            },
            "AISessionUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "type": "string"
                    }
                },
                "title": "AISessionUpdateBody",
                "type": "object"
            },
            "AIStatusResponse": {
                "additionalProperties": false,
                "properties": {
                    "ai_online": {
                        "title": "Ai Online",
                        "type": "boolean"
                    }
                },
                "required": [
                    "ai_online"
                ],
                "title": "AIStatusResponse",
                "type": "object"
            },
            "AITable": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "description": "Time of Table creation, in UTC",
                        "type": "string"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "description": "List of Document IDs in this Table",
                        "type": "array"
                    },
                    "id": {
                        "title": "ID",
                        "description": "Unique ID of Table",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use",
                        "type": "object"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "description": "Unique ID of Organization the Table belongs to",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "Unique ID of user the Table belongs to",
                        "type": "integer"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "description": "Whether this Table can only be seen by its creator, or by the whole Workspace",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "user_id",
                    "visibility",
                    "created_at",
                    "meta"
                ],
                "title": "AITable",
                "type": "object"
            },
            "AITableCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "description": "The IDs of the documents to include in this Table",
                        "type": "array"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Table metadata, for internal use",
                        "type": "object"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "description": "The Organization in which to create the Table",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "The user's unique ID",
                        "type": "integer"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "description": "Whether this Table can only be seen by its creator, or by the whole Workspace",
                        "type": "string",
                        "enum": [
                            "shared",
                            "private"
                        ],
                        "default": "shared"
                    }
                },
                "required": [
                    "organization_id",
                    "user_id"
                ],
                "title": "AITableCreateBody",
                "type": "object"
            },
            "AITableList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AITable"
                },
                "title": "AITableList",
                "type": "array"
            },
            "AITableListQuery": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "AITableListQuery",
                "type": "object"
            },
            "AITableRunBody": {
                "additionalProperties": false,
                "properties": {
                    "continue_response": {
                        "title": "Continue Response",
                        "description": "Whether the AI should continue the existing response found within the cell. Do not use on empty cells",
                        "type": "boolean"
                    },
                    "doc_id_col_id": {
                        "items": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array"
                        },
                        "title": "Doc ID Col ID",
                        "description": "List of Document-column pairs to create cells for, or to re-generate AI responses for. Provide the Document ID as the first item, then the AI column ID as the second item, for each pair",
                        "type": "array"
                    }
                },
                "required": [
                    "doc_id_col_id"
                ],
                "title": "AITableRunBody",
                "type": "object"
            },
            "AITableUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "visibility": {
                        "title": "Visibility",
                        "type": "string"
                    }
                },
                "title": "AITableUpdateBody",
                "type": "object"
            },
            "AccessTokenResponse": {
                "additionalProperties": false,
                "properties": {
                    "access_token": {
                        "title": "Access Token",
                        "description": "Cryptic bearer token, allows access to API",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description": "Time of user creation, in UTC",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "description": "Unique ID of the user",
                        "type": "integer"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "description": "Whether the user has used Petal recently",
                        "type": "boolean"
                    },
                    "last_active_at": {
                        "title": "Last Active At",
                        "description": "Time of last user activity, in UTC",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "User metadata, for internal use",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "organization_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Organization IDs",
                        "description": "Unique IDs of all Workspaces (Organizations) of which the user is part",
                        "type": "array"
                    },
                    "organization_roles": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Organization Roles",
                        "description": "User's role in their Organizations",
                        "type": "array"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "description": "Whether the user has verified their email",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "created_at",
                    "meta",
                    "is_active",
                    "last_active_at",
                    "verification_status",
                    "organization_ids",
                    "access_token"
                ],
                "title": "AccessTokenResponse",
                "type": "object"
            },
            "AnnotationCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "is_hidden": {
                        "title": "Is Hidden",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    }
                },
                "required": [
                    "document_id"
                ],
                "title": "AnnotationCreateBody",
                "type": "object"
            },
            "AnnotationDetailed": {
                "additionalProperties": false,
                "properties": {
                    "comment_count": {
                        "title": "Comment Count",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_hidden": {
                        "title": "Is Hidden",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "description",
                    "document_id",
                    "user_id",
                    "comment_count",
                    "is_hidden",
                    "use_ocr",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "text",
                    "meta"
                ],
                "title": "AnnotationDetailed",
                "type": "object"
            },
            "AnnotationDetailedList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AnnotationDetailedList.AnnotationDetailed"
                },
                "title": "AnnotationDetailedList",
                "type": "array"
            },
            "AnnotationDetailedList.AnnotationDetailed": {
                "additionalProperties": false,
                "properties": {
                    "comment_count": {
                        "title": "Comment Count",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_hidden": {
                        "title": "Is Hidden",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "description",
                    "document_id",
                    "user_id",
                    "comment_count",
                    "is_hidden",
                    "use_ocr",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "text",
                    "meta"
                ],
                "title": "AnnotationDetailed",
                "type": "object"
            },
            "AnnotationListQuery": {
                "additionalProperties": false,
                "properties": {
                    "comment_count": {
                        "title": "Comment Count",
                        "type": "integer"
                    },
                    "created_after": {
                        "title": "Created After",
                        "type": "string"
                    },
                    "created_before": {
                        "title": "Created Before",
                        "type": "string"
                    },
                    "descending": {
                        "title": "Descending",
                        "type": "boolean"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "include_hidden": {
                        "title": "Include Hidden",
                        "type": "boolean"
                    },
                    "modified_after": {
                        "title": "Modified After",
                        "type": "string"
                    },
                    "modified_before": {
                        "title": "Modified Before",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "page_size": {
                        "title": "Page Size",
                        "type": "integer"
                    },
                    "sort_by": {
                        "title": "Sort By",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "AnnotationListQuery",
                "type": "object"
            },
            "AnnotationListResponse": {
                "additionalProperties": false,
                "properties": {
                    "_links": {
                        "title": " Links",
                        "type": "object"
                    },
                    "_list": {
                        "$ref": "#/components/schemas/AnnotationListResponse.AnnotationDetailedList"
                    },
                    "_meta": {
                        "title": " Meta",
                        "type": "object"
                    }
                },
                "required": [
                    "_meta",
                    "_list",
                    "_links"
                ],
                "title": "AnnotationListResponse",
                "type": "object"
            },
            "AnnotationListResponse.AnnotationDetailed": {
                "additionalProperties": false,
                "properties": {
                    "comment_count": {
                        "title": "Comment Count",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_hidden": {
                        "title": "Is Hidden",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "description",
                    "document_id",
                    "user_id",
                    "comment_count",
                    "is_hidden",
                    "use_ocr",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "text",
                    "meta"
                ],
                "title": "AnnotationDetailed",
                "type": "object"
            },
            "AnnotationListResponse.AnnotationDetailedList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AnnotationListResponse.AnnotationDetailed"
                },
                "title": "AnnotationDetailedList",
                "type": "array"
            },
            "AnnotationMetaSearchQuery": {
                "additionalProperties": false,
                "properties": {
                    "html": {
                        "title": "Html"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "page_size": {
                        "title": "Page Size",
                        "type": "integer"
                    },
                    "q": {
                        "default": "",
                        "title": "Q",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "AnnotationMetaSearchQuery",
                "type": "object"
            },
            "AnnotationUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "is_hidden": {
                        "title": "Is Hidden",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    }
                },
                "title": "AnnotationUpdateBody",
                "type": "object"
            },
            "Attachment": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "filename",
                    "document_id",
                    "user_id",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Attachment",
                "type": "object"
            },
            "AttachmentList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AttachmentList.Attachment"
                },
                "title": "AttachmentList",
                "type": "array"
            },
            "AttachmentList.Attachment": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "filename",
                    "document_id",
                    "user_id",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Attachment",
                "type": "object"
            },
            "AttachmentUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    }
                },
                "title": "AttachmentUpdateBody",
                "type": "object"
            },
            "AuthBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "User's login email",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "description": "User's login password",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "title": "AuthBody",
                "type": "object"
            },
            "AutoExtractionRule": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "meta_json": {
                        "title": "Meta Json",
                        "type": "string"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "type",
                    "modified_at",
                    "modified_by",
                    "meta_json",
                    "meta"
                ],
                "title": "AutoExtractionRule",
                "type": "object"
            },
            "AutoExtractionRuleCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "type": "array"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id",
                    "type",
                    "meta"
                ],
                "title": "AutoExtractionRuleCreateBody",
                "type": "object"
            },
            "AutoExtractionRuleUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "meta"
                ],
                "title": "AutoExtractionRuleUpdateBody",
                "type": "object"
            },
            "AutoTaggingRule": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "meta_json": {
                        "title": "Meta Json",
                        "type": "string"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "type": "array"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "tag_ids",
                    "type",
                    "modified_at",
                    "modified_by",
                    "meta_json",
                    "meta"
                ],
                "title": "AutoTaggingRule",
                "type": "object"
            },
            "AutoTaggingRuleAddTagsBody": {
                "additionalProperties": false,
                "properties": {
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "tag_ids"
                ],
                "title": "AutoTaggingRuleAddTagsBody",
                "type": "object"
            },
            "AutoTaggingRuleCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "type": "array"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id",
                    "type",
                    "meta"
                ],
                "title": "AutoTaggingRuleCreateBody",
                "type": "object"
            },
            "AutoTaggingRuleList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/AutoTaggingRuleList.AutoTaggingRule"
                },
                "title": "AutoTaggingRuleList",
                "type": "array"
            },
            "AutoTaggingRuleList.AutoTaggingRule": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "meta_json": {
                        "title": "Meta Json",
                        "type": "string"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "type": "array"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "tag_ids",
                    "type",
                    "modified_at",
                    "modified_by",
                    "meta_json",
                    "meta"
                ],
                "title": "AutoTaggingRule",
                "type": "object"
            },
            "AutoTaggingRuleUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "meta"
                ],
                "title": "AutoTaggingRuleUpdateBody",
                "type": "object"
            },
            "Build": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "log": {
                        "title": "Log",
                        "type": "string"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "site_id": {
                        "title": "Site ID",
                        "type": "integer"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "uuid": {
                        "title": "Uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "user_id",
                    "task_id",
                    "site_id",
                    "created_at",
                    "modified_at",
                    "status",
                    "log"
                ],
                "title": "Build",
                "type": "object"
            },
            "BuildDelMultiBody": {
                "additionalProperties": false,
                "properties": {
                    "build_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Build IDs",
                        "type": "array"
                    },
                    "build_uuids": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Build Uuids",
                        "type": "array"
                    }
                },
                "title": "BuildDelMultiBody",
                "type": "object"
            },
            "BuildList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/BuildList.Build"
                },
                "title": "BuildList",
                "type": "array"
            },
            "BuildList.Build": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "log": {
                        "title": "Log",
                        "type": "string"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "site_id": {
                        "title": "Site ID",
                        "type": "integer"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "uuid": {
                        "title": "Uuid",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "user_id",
                    "task_id",
                    "site_id",
                    "created_at",
                    "modified_at",
                    "status",
                    "log"
                ],
                "title": "Build",
                "type": "object"
            },
            "CacheStats": {
                "additionalProperties": false,
                "properties": {
                    "cache_hit_ratio": {
                        "title": "Cache Hit Ratio",
                        "type": "number"
                    },
                    "recent_requests": {
                        "items": {
                            "$ref": "#/components/schemas/CacheStats.CachedRequest"
                        },
                        "title": "Recent Requests",
                        "type": "array"
                    },
                    "size": {
                        "title": "Size",
                        "type": "integer"
                    }
                },
                "required": [
                    "size",
                    "cache_hit_ratio",
                    "recent_requests"
                ],
                "title": "CacheStats",
                "type": "object"
            },
            "CacheStats.CachedRequest": {
                "additionalProperties": false,
                "properties": {
                    "accessed_at": {
                        "title": "Accessed At",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "endpoint": {
                        "title": "Endpoint",
                        "type": "string"
                    },
                    "expires_at": {
                        "title": "Expires At",
                        "type": "string"
                    },
                    "request_text": {
                        "title": "Request Text",
                        "type": "string"
                    },
                    "response_json": {
                        "title": "Response Json",
                        "type": "string"
                    }
                },
                "required": [
                    "endpoint",
                    "request_text",
                    "response_json",
                    "created_at",
                    "expires_at",
                    "accessed_at"
                ],
                "title": "CachedRequest",
                "type": "object"
            },
            "CheckStaleBody": {
                "additionalProperties": false,
                "properties": {
                    "annotations": {
                        "$ref": "#/components/schemas/CheckStaleBody.CheckStaleAnnotations"
                    },
                    "comments": {
                        "$ref": "#/components/schemas/CheckStaleBody.CheckStaleAnnotations"
                    },
                    "document": {
                        "$ref": "#/components/schemas/CheckStaleBody.CheckStaleOrganization"
                    },
                    "documents": {
                        "$ref": "#/components/schemas/CheckStaleBody.CheckStaleDocuments"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/CheckStaleBody.CheckStaleOrganization"
                    }
                },
                "title": "CheckStaleBody",
                "type": "object"
            },
            "CheckStaleBody.CheckStaleAnnotations": {
                "additionalProperties": false,
                "properties": {
                    "document_id": {
                        "title": "Document ID",
                        "type": "integer"
                    },
                    "last_fetched": {
                        "title": "Last Fetched",
                        "type": "string"
                    }
                },
                "required": [
                    "document_id",
                    "last_fetched"
                ],
                "title": "CheckStaleAnnotations",
                "type": "object"
            },
            "CheckStaleBody.CheckStaleDocuments": {
                "additionalProperties": false,
                "properties": {
                    "last_fetched": {
                        "title": "Last Fetched",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id",
                    "last_fetched"
                ],
                "title": "CheckStaleDocuments",
                "type": "object"
            },
            "CheckStaleBody.CheckStaleOrganization": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "last_fetched": {
                        "title": "Last Fetched",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "last_fetched"
                ],
                "title": "CheckStaleOrganization",
                "type": "object"
            },
            "CheckStaleResponse": {
                "additionalProperties": false,
                "properties": {
                    "annotations": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Annotations",
                        "type": "array"
                    },
                    "comments": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Comments",
                        "type": "array"
                    },
                    "document": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document",
                        "type": "array"
                    },
                    "documents": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Documents",
                        "type": "array"
                    },
                    "organization": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Organization",
                        "type": "array"
                    }
                },
                "title": "CheckStaleResponse",
                "type": "object"
            },
            "CiteGenListCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "data_json": {
                        "title": "Data Json",
                        "type": "object"
                    }
                },
                "required": [
                    "data_json"
                ],
                "title": "CiteGenListCreateBody",
                "type": "object"
            },
            "CiteGenListResponse": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "data_json": {
                        "title": "Data Json",
                        "type": "object"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "data_json",
                    "created_at",
                    "modified_at"
                ],
                "title": "CiteGenListResponse",
                "type": "object"
            },
            "CiteGenListResponseList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/CiteGenListResponseList.CiteGenListResponse"
                },
                "title": "CiteGenListResponseList",
                "type": "array"
            },
            "CiteGenListResponseList.CiteGenListResponse": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "data_json": {
                        "title": "Data Json",
                        "type": "object"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "data_json",
                    "created_at",
                    "modified_at"
                ],
                "title": "CiteGenListResponse",
                "type": "object"
            },
            "CiteGenListUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "data_json": {
                        "title": "Data Json",
                        "type": "object"
                    }
                },
                "required": [
                    "data_json"
                ],
                "title": "CiteGenListUpdateBody",
                "type": "object"
            },
            "CiteGenQuery": {
                "additionalProperties": false,
                "properties": {
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "query"
                ],
                "title": "CiteGenQuery",
                "type": "object"
            },
            "CiteGenSearchQuery": {
                "additionalProperties": false,
                "properties": {
                    "author": {
                        "title": "Author",
                        "type": "string"
                    },
                    "journal": {
                        "title": "Journal",
                        "type": "string"
                    },
                    "query": {
                        "title": "Query",
                        "type": "string"
                    },
                    "year": {
                        "title": "Year",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "CiteGenSearchQuery",
                "type": "object"
            },
            "CiteGenSearchResults": {
                "additionalProperties": false,
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/CiteGenSearchResults.CiteGenSearchResultItem"
                        },
                        "title": "Items",
                        "type": "array"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    }
                },
                "required": [
                    "items",
                    "message"
                ],
                "title": "CiteGenSearchResults",
                "type": "object"
            },
            "CiteGenSearchResults.CiteGenSearchResultItem": {
                "additionalProperties": false,
                "properties": {
                    "csljson": {
                        "title": "Csljson",
                        "type": "object"
                    }
                },
                "required": [
                    "csljson"
                ],
                "title": "CiteGenSearchResultItem",
                "type": "object"
            },
            "Collection": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_shared": {
                        "title": "Is Shared",
                        "type": "boolean"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "parent_id",
                    "user_id",
                    "name",
                    "document_ids",
                    "created_at",
                    "modified_at",
                    "is_shared"
                ],
                "title": "Collection",
                "type": "object"
            },
            "CollectionCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "allow_duplicate": {
                        "title": "Allow Duplicate",
                        "type": "boolean"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "is_shared": {
                        "title": "Is Shared",
                        "type": "boolean"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id",
                    "parent_id",
                    "name"
                ],
                "title": "CollectionCreateBody",
                "type": "object"
            },
            "CollectionDeleteBody": {
                "additionalProperties": false,
                "properties": {
                    "collection_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Collection IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "collection_ids"
                ],
                "title": "CollectionDeleteBody",
                "type": "object"
            },
            "CollectionList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/CollectionList.Collection"
                },
                "title": "CollectionList",
                "type": "array"
            },
            "CollectionList.Collection": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_shared": {
                        "title": "Is Shared",
                        "type": "boolean"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "parent_id",
                    "user_id",
                    "name",
                    "document_ids",
                    "created_at",
                    "modified_at",
                    "is_shared"
                ],
                "title": "Collection",
                "type": "object"
            },
            "CollectionUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "collections": {
                        "items": {
                            "$ref": "#/components/schemas/CollectionUpdateBody.CollectionUpdate"
                        },
                        "title": "Collections",
                        "type": "array"
                    }
                },
                "required": [
                    "collections"
                ],
                "title": "CollectionUpdateBody",
                "type": "object"
            },
            "CollectionUpdateBody.CollectionUpdate": {
                "additionalProperties": false,
                "properties": {
                    "allow_duplicate": {
                        "title": "Allow Duplicate",
                        "type": "boolean"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_shared": {
                        "title": "Is Shared",
                        "type": "boolean"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "CollectionUpdate",
                "type": "object"
            },
            "Comment": {
                "additionalProperties": false,
                "properties": {
                    "annotation_id": {
                        "title": "Annotation ID",
                        "description":"Unique ID of Annotation this comment belongs to",
                        "type": "integer"
                    },
                    "content": {
                        "title": "Content",
                        "description":"Text content of the comment",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description":"Creation time, by UTC",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "description":"Unique ID of comment",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "description":"Modification time, by UTC",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "description":"Last user to modify",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserSimple"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description":"Unique ID of user to create comment",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "annotation_id",
                    "user_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "content",
                    "user"
                ],
                "title": "Comment",
                "type": "object"
            },
            "CommentCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "annotation_id": {
                        "title": "Annotation ID",
                        "type": "integer"
                    },
                    "content": {
                        "title": "Content",
                        "type": "string"
                    }
                },
                "required": [
                    "annotation_id",
                    "content"
                ],
                "title": "CommentCreateBody",
                "type": "object"
            },
            "CommentList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/Comment"
                },
                "title": "CommentList",
                "type": "array"
            },
            "CommentUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "content": {
                        "title": "Content",
                        "type": "string"
                    }
                },
                "title": "CommentUpdateBody",
                "type": "object"
            },
            "DictResponse": {
                "additionalProperties": false,
                "title": "DictResponse",
                "type": "object"
            },
            "DiscourseRedirectURL": {
                "additionalProperties": false,
                "properties": {
                    "redirect_url": {
                        "title": "Redirect Url",
                        "type": "string"
                    }
                },
                "required": [
                    "redirect_url"
                ],
                "title": "DiscourseRedirectURL",
                "type": "object"
            },
            "Document": {
                "additionalProperties": false,
                "properties": {
                    "annotation_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Annotation IDs",
                        "description": "Unique IDs of Annotations made on this Document",
                        "type": "array"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description": "Creation time, by UTC",
                        "type": "string"
                    },
                    "csl": {
                        "title": "CSL",
                        "description": "Citation information",
                        "type": "object"
                    },
                    "doctype": {
                        "title": "Doctype",
                        "description": "Extension of the Document (txt, pdf, etc.)",
                        "type": "string"
                    },
                    "file_resource_size": {
                        "title": "File Resource Size",
                        "description": "Size of extracted information",
                        "type": "integer"
                    },
                    "file_size": {
                        "title": "File Size",
                        "description": "Size of original file",
                        "type": "integer"
                    },
                    "filename": {
                        "title": "Filename",
                        "description": "Name of original file",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "description": "Unique ID of the Document",
                        "type": "integer"
                    },
                    "is_trash": {
                        "title": "Is Trash",
                        "description": "Is the Document in Workspace trash",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "description": "Metadata, for internal use",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "description": "Modification time, by UTC",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "description": "User ID of last modifier. May be -1 (system)",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "description": "ID of Workspace this Document belongs to",
                        "type": "integer"
                    },
                    "pages": {
                        "title": "Pages",
                        "description": "Number of pages in Document",
                        "type": "integer"
                    },
                    "resource_size": {
                        "title": "Resource Size",
                        "description": "Miscellaneous space used by Document",
                        "type": "integer"
                    },
                    "status": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "title": "Status",
                        "description": "Document processing status. 0 = not started, 1 = in progress, 2 = completed, and 3 = error",
                        "type": "object"
                    },
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "description": "IDs of Tags added to this Document",
                        "type": "array"
                    },
                    "ui": {
                        "title": "UI",
                        "description": "For use by Petal frontend, for UI settings",
                        "type": "object"
                    },
                    "use_ocr": {
                        "title": "Use OCR",
                        "description": "Whether or not to use OCR on this Document. Leave as False except for images",
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserSimple"
                    }
                },
                "required": [
                    "annotation_ids",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "id",
                    "is_trash",
                    "use_ocr",
                    "meta",
                    "csl",
                    "ui",
                    "status",
                    "organization_id",
                    "tag_ids",
                    "user",
                    "doctype",
                    "file_size",
                    "pages",
                    "resource_size",
                    "file_resource_size"
                ],
                "title": "Document",
                "type": "object"
            },
            "UserSimple": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Unique ID of user",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of user",
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "UserSimple",
                "type": "object"
            },
            "DocumentAddTagBody": {
                "additionalProperties": false,
                "properties": {
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "tag_ids"
                ],
                "title": "DocumentAddTagBody",
                "type": "object"
            },
            "DocumentCopyBody": {
                "additionalProperties": false,
                "properties": {
                    "copy_annotations": {
                        "title": "Copy Annotations",
                        "type": "boolean"
                    },
                    "copy_tags": {
                        "title": "Copy Tags",
                        "type": "boolean"
                    },
                    "destination_collection_id": {
                        "title": "Destination Collection ID",
                        "type": "integer"
                    },
                    "destination_organization_id": {
                        "title": "Destination Organization ID",
                        "type": "integer"
                    },
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "destination_organization_id",
                    "document_ids",
                    "copy_annotations",
                    "copy_tags"
                ],
                "title": "DocumentCopyBody",
                "type": "object"
            },
            "DocumentCopyResponse": {
                "additionalProperties": false,
                "properties": {
                    "new_document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "New Document IDs",
                        "type": "array"
                    },
                    "success": {
                        "default": true,
                        "title": "Success",
                        "type": "boolean"
                    }
                },
                "required": [
                    "new_document_ids"
                ],
                "title": "DocumentCopyResponse",
                "type": "object"
            },
            "DocumentDelMultiBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "description": "Unique IDs of Documents to delete",
                        "type": "array"
                    }
                },
                "required": [
                    "document_ids"
                ],
                "title": "DocumentDelMultiBody",
                "type": "object"
            },
            "DocumentDoiSearchBody": {
                "additionalProperties": false,
                "properties": {
                    "doi": {
                        "title": "Doi",
                        "type": "string"
                    }
                },
                "required": [
                    "doi"
                ],
                "title": "DocumentDoiSearchBody",
                "type": "object"
            },
            "DocumentDoiSearchResponse": {
                "additionalProperties": false,
                "title": "DocumentDoiSearchResponse",
                "type": "object"
            },
            "DocumentDoiSearchResponse.BibtexEntry": {
                "additionalProperties": false,
                "properties": {
                    "citekey": {
                        "title": "Citekey",
                        "type": "string"
                    },
                    "entrytype": {
                        "title": "Entrytype",
                        "type": "string"
                    },
                    "properties": {
                        "title": "Properties",
                        "type": "object"
                    }
                },
                "required": [
                    "citekey",
                    "entrytype",
                    "properties"
                ],
                "title": "BibtexEntry",
                "type": "object"
            },
            "DocumentDoiSearchResponse.DoiApiResponse": {
                "additionalProperties": false,
                "properties": {
                    "bib_info": {
                        "$ref": "#/components/schemas/DocumentDoiSearchResponse.BibtexEntry"
                    },
                    "error": {
                        "$ref": "#/components/schemas/DocumentDoiSearchResponse.DoiErrorDict"
                    },
                    "success": {
                        "title": "Success",
                        "type": "boolean"
                    }
                },
                "required": [
                    "success"
                ],
                "title": "DoiApiResponse",
                "type": "object"
            },
            "DocumentDoiSearchResponse.DoiErrorDict": {
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "status_code": {
                        "title": "Status Code",
                        "type": "integer"
                    }
                },
                "required": [
                    "status_code",
                    "message"
                ],
                "title": "DoiErrorDict",
                "type": "object"
            },
            "DocumentDownloadBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "title": "Document IDs",
                        "type": "string"
                    }
                },
                "required": [
                    "document_ids"
                ],
                "title": "DocumentDownloadBody",
                "type": "object"
            },
            "DocumentKeywordsBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    },
                    "weights": {
                        "items": {
                            "type": "number"
                        },
                        "title": "Weights",
                        "type": "array"
                    }
                },
                "required": [
                    "document_ids"
                ],
                "title": "DocumentKeywordsBody",
                "type": "object"
            },
            "DocumentKeywordsResponse": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/DocumentKeywordsResponse.SearchKeyword"
                },
                "title": "DocumentKeywordsResponse",
                "type": "array"
            },
            "DocumentKeywordsResponse.SearchKeyword": {
                "additionalProperties": false,
                "properties": {
                    "score": {
                        "title": "Score",
                        "type": "number"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    }
                },
                "required": [
                    "score",
                    "text"
                ],
                "title": "SearchKeyword",
                "type": "object"
            },
            "DocumentLinksResponse": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/DocumentLinksResponse.DocumentLink"
                },
                "title": "DocumentLinksResponse",
                "type": "array"
            },
            "DocumentLinksResponse.DocumentLink": {
                "additionalProperties": false,
                "properties": {
                    "action": {
                        "title": "Action",
                        "type": "string"
                    },
                    "area": {
                        "items": {
                            "type": "number"
                        },
                        "title": "Area",
                        "type": "array"
                    },
                    "dest": {
                        "$ref": "#/components/schemas/DocumentLinksResponse.DocumentLinkDestination"
                    },
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "page",
                    "area"
                ],
                "title": "DocumentLink",
                "type": "object"
            },
            "DocumentLinksResponse.DocumentLinkDestination": {
                "additionalProperties": false,
                "properties": {
                    "area": {
                        "items": {
                            "type": "number"
                        },
                        "title": "Area",
                        "type": "array"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "is_external": {
                        "title": "Is External",
                        "type": "boolean"
                    },
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "parameters": {
                        "title": "Parameters",
                        "type": "string"
                    },
                    "url": {
                        "title": "Url",
                        "type": "string"
                    }
                },
                "title": "DocumentLinkDestination",
                "type": "object"
            },
            "DocumentList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/Document"
                },
                "title": "DocumentList",
                "type": "array"
            },
            "DocumentListQuery": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "document_ids"
                ],
                "title": "DocumentListQuery",
                "type": "object"
            },
            "DocumentLookupBody": {
                "additionalProperties": false,
                "properties": {
                    "author": {
                        "title": "Author",
                        "type": "string"
                    },
                    "sources": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Sources",
                        "type": "array"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    }
                },
                "required": [
                    "author",
                    "title"
                ],
                "title": "DocumentLookupBody",
                "type": "object"
            },
            "DocumentLookupResponse": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/DocumentLookupResponse.DocumentLookupResult"
                },
                "title": "DocumentLookupResponse",
                "type": "array"
            },
            "DocumentLookupResponse.DocumentLookupResult": {
                "additionalProperties": false,
                "properties": {
                    "properties": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Properties",
                        "type": "object"
                    },
                    "score": {
                        "title": "Score",
                        "type": "number"
                    },
                    "source": {
                        "title": "Source",
                        "type": "string"
                    }
                },
                "required": [
                    "source",
                    "score",
                    "properties"
                ],
                "title": "DocumentLookupResult",
                "type": "object"
            },
            "DocumentOutlineResponse": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/DocumentOutlineResponse.DocumentOutline"
                },
                "title": "DocumentOutlineResponse",
                "type": "array"
            },
            "DocumentOutlineResponse.DocumentOutline": {
                "additionalProperties": false,
                "properties": {
                    "children": {
                        "items": {},
                        "title": "Children",
                        "type": "array"
                    },
                    "page": {
                        "title": "Page",
                        "type": "integer"
                    },
                    "title": {
                        "title": "Title",
                        "type": "string"
                    }
                },
                "required": [
                    "children",
                    "page",
                    "title"
                ],
                "title": "DocumentOutline",
                "type": "object"
            },
            "DocumentReadResponse": {
                "additionalProperties": false,
                "properties": {
                    "annotation_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Annotation IDs",
                        "description":"Unique IDs of Annotations made on this Document",
                        "type": "array"
                    },
                    "annotations": {
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        },
                        "title": "Annotations",
                        "description":"Detailed Annotations made on this Document",
                        "type": "array"
                    },
                    "comments": {
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        },
                        "title": "Comments",
                        "description": "Detailed comments made on the Annotations",
                        "type": "array"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description":"Creation time, by UTC",
                        "type": "string"
                    },
                    "csl": {
                        "title": "CSL",
                        "description":"CSL reference info for internal use",
                        "type": "object"
                    },
                    "doctype": {
                        "title": "Doctype",
                        "description":"Type of file, such as pdf, txt, etc.",
                        "type": "string"
                    },
                    "file_resource_size": {
                        "title": "File Resource Size",
                        "description":"Size of extracted information",
                        "type": "integer"
                    },
                    "file_size": {
                        "title": "File Size",
                        "description":"Size of original file",
                        "type": "integer"
                    },
                    "filename": {
                        "title": "Filename",
                        "description":"Name of original file",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "description":"Unique ID of the Document",
                        "type": "integer"
                    },
                    "is_trash": {
                        "title": "Is Trash",
                        "description":"Is the Document in Workspace trash",
                        "type": "boolean"
                    },
                    "keywords": {
                        "items": {},
                        "title": "Keywords",
                        "description":"Keywords for internal use",
                        "type": "array"
                    },
                    "meta": {
                        "title": "Meta",
                        "description":"Metadata, for internal use",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "description":"Modification time, by UTC",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "description":"Last user to modify",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "description":"Unique ID of Organization",
                        "type": "integer"
                    },
                    "pages": {
                        "title": "Pages",
                        "description":"Number of pages in Document",
                        "type": "integer"
                    },
                    "ranking": {
                        "title": "Ranking",
                        "description":"Search ranking if applicable",
                        "type": "integer"
                    },
                    "resource_size": {
                        "title": "Resource Size",
                        "description":"Internal resource usage",
                        "type": "integer"
                    },
                    "resource_stats": {
                        "$ref": "#/components/schemas/DocumentResourceStats"
                    },
                    "snippet": {
                        "title": "Snippet",
                        "description":"Snippet found through search, if applicable",
                        "type": "string"
                    },
                    "span": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Span",
                        "description": "For UI use",
                        "type": "array"
                    },
                    "status": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "title": "Status",
                        "description":"Processing status of Document",
                        "type": "object"
                    },
                    "suggested_tags": {
                        "items": {
                            "$ref": "#/components/schemas/SuggestedTag"
                        },
                        "title": "Suggested Tags",
                        "description":"Auto suggested tags",
                        "type": "array"
                    },
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "description":"IDs of tags on this Document",
                        "type": "array"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        },
                        "title": "Tasks",
                        "description":"Queued tasks associated with this Document",
                        "type": "array"
                    },
                    "ui": {
                        "title": "UI",
                        "description":"UI information for internal use",
                        "type": "object"
                    },
                    "use_ocr": {
                        "title": "Use OCR",
                        "description":"Whether or not to use OCR on this Document. Leave as False except for images",
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserSimple"
                    }
                },
                "required": [
                    "annotation_ids",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "id",
                    "is_trash",
                    "use_ocr",
                    "meta",
                    "csl",
                    "ui",
                    "status",
                    "organization_id",
                    "tag_ids",
                    "user",
                    "doctype",
                    "file_size",
                    "pages",
                    "resource_size",
                    "file_resource_size"
                ],
                "title": "DocumentReadResponse",
                "type": "object"
            },
            "SuggestedTag": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "document_count": {
                        "title": "Document Count",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "color",
                    "document_count"
                ],
                "title": "SuggestedTag",
                "description":"Detailed information of a tag",
                "type": "object"
            },
            "DocumentReadResponse.Task": {
                "additionalProperties": false,
                "properties": {
                    "args_json": {
                        "title": "Args Json",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At"
                    },
                    "function": {
                        "title": "Function",
                        "type": "string"
                    },
                    "group_id": {
                        "title": "Group ID",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "module": {
                        "title": "Module",
                        "type": "string"
                    },
                    "nrequeue": {
                        "title": "Nrequeue",
                        "type": "integer"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "type": "integer"
                    },
                    "parent_table": {
                        "title": "Parent Table",
                        "type": "string"
                    },
                    "runtime": {
                        "title": "Runtime",
                        "type": "number"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "traceback": {
                        "title": "Traceback",
                        "type": "string"
                    },
                    "updated_at": {
                        "title": "Updated At"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Task",
                "type": "object"
            },
            "DocumentRegexBody": {
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "overwrite": {
                        "title": "Overwrite",
                        "type": "boolean"
                    },
                    "pattern": {
                        "title": "Pattern",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "pattern"
                ],
                "title": "DocumentRegexBody",
                "type": "object"
            },
            "DocumentRegexResponse": {
                "additionalProperties": false,
                "properties": {
                    "match_exceeded": {
                        "title": "Match Exceeded",
                        "type": "boolean"
                    },
                    "matches": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentRegexResponse.RegexMatch"
                        },
                        "title": "Matches",
                        "type": "array"
                    },
                    "pattern": {
                        "title": "Pattern",
                        "type": "string"
                    },
                    "time_exceeded": {
                        "title": "Time Exceeded",
                        "type": "boolean"
                    }
                },
                "required": [
                    "pattern",
                    "matches",
                    "time_exceeded",
                    "match_exceeded"
                ],
                "title": "DocumentRegexResponse",
                "type": "object"
            },
            "DocumentRegexResponse.RegexMatch": {
                "additionalProperties": false,
                "properties": {
                    "end": {
                        "title": "End",
                        "type": "integer"
                    },
                    "groups": {
                        "items": {},
                        "title": "Groups",
                        "type": "array"
                    },
                    "start": {
                        "title": "Start",
                        "type": "integer"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    }
                },
                "required": [
                    "start",
                    "end",
                    "text",
                    "groups"
                ],
                "title": "RegexMatch",
                "type": "object"
            },
            "DocumentRerunUploadBody": {
                "additionalProperties": false,
                "properties": {
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    }
                },
                "title": "DocumentRerunUploadBody",
                "type": "object"
            },
            "DocumentResourceStats": {
                "additionalProperties": false,
                "properties": {
                    "file_list": {
                        "title": "File List"
                    },
                    "file_size": {
                        "title": "File Size",
                        "type": "integer"
                    },
                    "file_size_by_mime_type": {
                        "title": "File Size By Mime Type"
                    },
                    "file_size_by_res_type": {
                        "title": "File Size By Res Type"
                    }
                },
                "required": [
                    "file_size"
                ],
                "title": "DocumentResourceStats",
                "description": "Detailed description of disk usage by a given Document",
                "type": "object"
            },
            "DocumentRestoreBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "document_ids"
                ],
                "title": "DocumentRestoreBody",
                "type": "object"
            },
            "DocumentSearchQuery": {
                "additionalProperties": false,
                "properties": {
                    "html": {
                        "title": "Html"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "boolean"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "q": {
                        "default": "",
                        "title": "Q",
                        "type": "string"
                    },
                    "rows": {
                        "title": "Rows",
                        "type": "integer"
                    },
                    "text": {
                        "title": "Text",
                        "type": "boolean"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "DocumentSearchQuery",
                "type": "object"
            },
            "DocumentSearchResponse": {
                "additionalProperties": false,
                "properties": {
                    "snippets": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSearchResponse.Snippet"
                        },
                        "title": "Snippets",
                        "type": "array"
                    },
                    "text_length": {
                        "title": "Text Length",
                        "type": "integer"
                    },
                    "tokens": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSearchResponse.Token"
                        },
                        "title": "Tokens",
                        "type": "array"
                    }
                },
                "required": [
                    "snippets",
                    "tokens",
                    "text_length"
                ],
                "title": "DocumentSearchResponse",
                "type": "object"
            },
            "DocumentSearchResponse.SearchMatch": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "integer"
                    },
                    "span": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Span",
                        "type": "array"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "weight": {
                        "title": "Weight",
                        "type": "integer"
                    }
                },
                "required": [
                    "color",
                    "span",
                    "text",
                    "weight"
                ],
                "title": "SearchMatch",
                "type": "object"
            },
            "DocumentSearchResponse.Snippet": {
                "additionalProperties": false,
                "properties": {
                    "end": {
                        "title": "End",
                        "type": "integer"
                    },
                    "matches": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSearchResponse.SearchMatch"
                        },
                        "title": "Matches",
                        "type": "array"
                    },
                    "score": {
                        "title": "Score",
                        "type": "number"
                    },
                    "start": {
                        "title": "Start",
                        "type": "integer"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    }
                },
                "required": [
                    "start",
                    "end",
                    "matches",
                    "score",
                    "text"
                ],
                "title": "Snippet",
                "type": "object"
            },
            "DocumentSearchResponse.Token": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "integer"
                    },
                    "matches": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentSearchResponse.SearchMatch"
                        },
                        "title": "Matches",
                        "type": "array"
                    },
                    "text": {
                        "title": "Text",
                        "type": "string"
                    },
                    "weight": {
                        "title": "Weight",
                        "type": "integer"
                    }
                },
                "required": [
                    "text",
                    "color",
                    "weight",
                    "matches"
                ],
                "title": "Token",
                "type": "object"
            },
            "DocumentStubCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "collection_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Collection IDs",
                        "type": "array"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "stubs": {
                        "items": {
                            "$ref": "#/components/schemas/DocumentStubCreateBody.DocumentStub"
                        },
                        "title": "Stubs",
                        "type": "array"
                    }
                },
                "required": [
                    "organization_id",
                    "stubs"
                ],
                "title": "DocumentStubCreateBody",
                "type": "object"
            },
            "DocumentStubCreateBody.DocumentStub": {
                "additionalProperties": false,
                "properties": {
                    "meta_json": {
                        "title": "Meta Json",
                        "type": "string"
                    },
                    "ui_json": {
                        "title": "Ui Json",
                        "type": "string"
                    }
                },
                "required": [
                    "meta_json"
                ],
                "title": "DocumentStub",
                "type": "object"
            },
            "DocumentSuggestedTagsResponse": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/SuggestedTag"
                },
                "title": "DocumentSuggestedTagsResponse",
                "type": "array"
            },
            "DocumentTextSpansQuery": {
                "additionalProperties": false,
                "properties": {
                    "end_indices": {
                        "title": "End Indices",
                        "type": "string"
                    },
                    "start_indices": {
                        "title": "Start Indices",
                        "type": "string"
                    }
                },
                "required": [
                    "start_indices",
                    "end_indices"
                ],
                "title": "DocumentTextSpansQuery",
                "type": "object"
            },
            "DocumentTextSpansResponse": {
                "additionalProperties": false,
                "items": {
                    "type": "string"
                },
                "title": "DocumentTextSpansResponse",
                "type": "array"
            },
            "DocumentToggleOcrBody": {
                "additionalProperties": false,
                "properties": {
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    }
                },
                "title": "DocumentToggleOcrBody",
                "type": "object"
            },
            "DocumentTrashBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "document_ids"
                ],
                "title": "DocumentTrashBody",
                "type": "object"
            },
            "DocumentUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "csl_json": {
                        "title": "Csl Json",
                        "type": "string"
                    },
                    "doctype": {
                        "title": "Doctype",
                        "type": "string"
                    },
                    "file": {
                        "title": "File"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "is_trash": {
                        "title": "Is Trash",
                        "type": "boolean"
                    },
                    "meta_json": {
                        "title": "Meta Json",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "tags_json": {
                        "title": "Tags Json",
                        "type": "string"
                    },
                    "ui_json": {
                        "title": "Ui Json",
                        "type": "string"
                    },
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    }
                },
                "title": "DocumentUpdateBody",
                "type": "object"
            },
            "ErrorReportBody": {
                "additionalProperties": false,
                "properties": {
                    "comment": {
                        "title": "Comment",
                        "type": "string"
                    },
                    "endpoint": {
                        "title": "Endpoint",
                        "type": "string"
                    },
                    "method": {
                        "title": "Method",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "request_json": {
                        "title": "Request Json",
                        "type": "string"
                    },
                    "response_code": {
                        "title": "Response Code",
                        "type": "integer"
                    },
                    "response_json": {
                        "title": "Response Json",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "title": "ErrorReportBody",
                "type": "object"
            },
            "File": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "doctype": {
                        "title": "Doctype",
                        "type": "string"
                    },
                    "file_size": {
                        "title": "File Size",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "string"
                    },
                    "pages": {
                        "title": "Pages",
                        "type": "integer"
                    },
                    "resource_size": {
                        "title": "Resource Size",
                        "type": "integer"
                    },
                    "status": {
                        "title": "Status",
                        "type": "object"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "doctype",
                    "meta",
                    "status",
                    "file_size",
                    "pages",
                    "resource_size"
                ],
                "title": "File",
                "type": "object"
            },
            "FileUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "content": {
                        "title": "Content",
                        "type": "string"
                    },
                    "doctype": {
                        "title": "Doctype",
                        "type": "string"
                    },
                    "file": {
                        "title": "File"
                    },
                    "meta_json": {
                        "title": "Meta Json",
                        "type": "string"
                    }
                },
                "title": "FileUpdateBody",
                "type": "object"
            },
            "ForgotPasswordCodeAcceptBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "verification_code"
                ],
                "title": "ForgotPasswordCodeAcceptBody",
                "type": "object"
            },
            "ForgotPasswordCodeVerifyBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "verification_code"
                ],
                "title": "ForgotPasswordCodeVerifyBody",
                "type": "object"
            },
            "ForgotPasswordEmailSendBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "ForgotPasswordEmailSendBody",
                "type": "object"
            },
            "HTMLToDocx": {
                "additionalProperties": false,
                "properties": {
                    "html": {
                        "title": "Html",
                        "type": "string"
                    }
                },
                "required": [
                    "html"
                ],
                "title": "HTMLToDocx",
                "type": "object"
            },
            "Invite": {
                "additionalProperties": false,
                "properties": {
                    "accepted_at": {
                        "title": "Accepted At",
                        "type": "string"
                    },
                    "declined_at": {
                        "title": "Declined At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "invited_by_email": {
                        "title": "Invited By Email",
                        "type": "string"
                    },
                    "invited_by_name": {
                        "title": "Invited By Name",
                        "type": "string"
                    },
                    "invited_by_user_id": {
                        "title": "Invited By User ID",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "organization_name": {
                        "title": "Organization Name",
                        "type": "string"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "sent_at": {
                        "title": "Sent At",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "email",
                    "invited_by_user_id",
                    "invited_by_email",
                    "invited_by_name",
                    "organization_id",
                    "organization_name",
                    "role",
                    "sent_at"
                ],
                "title": "Invite",
                "type": "object"
            },
            "InviteCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "organization_id",
                    "role"
                ],
                "title": "InviteCreateBody",
                "type": "object"
            },
            "InviteList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/InviteList.Invite"
                },
                "title": "InviteList",
                "type": "array"
            },
            "InviteList.Invite": {
                "additionalProperties": false,
                "properties": {
                    "accepted_at": {
                        "title": "Accepted At",
                        "type": "string"
                    },
                    "declined_at": {
                        "title": "Declined At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "invited_by_email": {
                        "title": "Invited By Email",
                        "type": "string"
                    },
                    "invited_by_name": {
                        "title": "Invited By Name",
                        "type": "string"
                    },
                    "invited_by_user_id": {
                        "title": "Invited By User ID",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "organization_name": {
                        "title": "Organization Name",
                        "type": "string"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "sent_at": {
                        "title": "Sent At",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "email",
                    "invited_by_user_id",
                    "invited_by_email",
                    "invited_by_name",
                    "organization_id",
                    "organization_name",
                    "role",
                    "sent_at"
                ],
                "title": "Invite",
                "type": "object"
            },
            "InviteUserPermittedQuery": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "organization_id",
                    "role"
                ],
                "title": "InviteUserPermittedQuery",
                "type": "object"
            },
            "InviteUserPermittedResponse": {
                "additionalProperties": false,
                "properties": {
                    "user_status": {
                        "title": "User Status",
                        "type": "string"
                    }
                },
                "required": [
                    "user_status"
                ],
                "title": "InviteUserPermittedResponse",
                "type": "object"
            },
            "LoginAsUserRequest": {
                "additionalProperties": false,
                "properties": {
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "user_id"
                ],
                "title": "LoginAsUserRequest",
                "type": "object"
            },
            "Media": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "extension": {
                        "title": "Extension",
                        "type": "string"
                    },
                    "file_size": {
                        "title": "File Size",
                        "type": "integer"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "md5_hash": {
                        "title": "Md5 Hash",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "string"
                    },
                    "site_id": {
                        "title": "Site ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "md5_hash",
                    "user_id",
                    "site_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "filename",
                    "extension",
                    "meta",
                    "file_size"
                ],
                "title": "Media",
                "type": "object"
            },
            "MediaList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/MediaList.Media"
                },
                "title": "MediaList",
                "type": "array"
            },
            "MediaList.Media": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "extension": {
                        "title": "Extension",
                        "type": "string"
                    },
                    "file_size": {
                        "title": "File Size",
                        "type": "integer"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "md5_hash": {
                        "title": "Md5 Hash",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "string"
                    },
                    "site_id": {
                        "title": "Site ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "md5_hash",
                    "user_id",
                    "site_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "filename",
                    "extension",
                    "meta",
                    "file_size"
                ],
                "title": "Media",
                "type": "object"
            },
            "MultiDocumentSearchResponse": {
                "additionalProperties": false,
                "properties": {
                    "documents": {
                        "items": {
                            "$ref": "#/components/schemas/MultiDocumentSearchResponse.DocumentReadResponse"
                        },
                        "title": "Documents",
                        "type": "array"
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/components/schemas/MultiDocumentSearchResponse.Tag"
                        },
                        "title": "Tags",
                        "type": "array"
                    }
                },
                "required": [
                    "documents",
                    "tags"
                ],
                "title": "MultiDocumentSearchResponse",
                "type": "object"
            },
            "Annotation": {
                "additionalProperties": false,
                "properties": {
                    "comment_count": {
                        "title": "Comment Count",
                        "description":"Number of comments on Annotation",
                        "type": "integer"
                    },
                    "created_at": {
                        "title": "Created At",
                        "description":"Creation time, by UTC",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description":"Text description of Annotation",
                        "type": "string"
                    },
                    "document_id": {
                        "title": "Document ID",
                        "description":"Unique ID of the Document",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "description":"Unique ID of the Annotation",
                        "type": "integer"
                    },
                    "is_hidden": {
                        "title": "Is Hidden",
                        "description": "Whether the Annotation is hidden from other users",
                        "type": "boolean"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "description":"Modification time, by UTC",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "description":"Last user to modify",
                        "type": "integer"
                    },
                    "type": {
                        "title": "Type",
                        "description":"Whether the Annotation is on text or an image (rectangular)",
                        "type": "string"
                    },
                    "use_ocr": {
                        "title": "Use OCR",
                        "description":"Whether or not to use OCR on this Annotation. Leave as False except for images",
                        "type": "boolean"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description":"ID of user who created this Annotation",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "description",
                    "document_id",
                    "user_id",
                    "comment_count",
                    "is_hidden",
                    "use_ocr",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Annotation",
                "type": "object"
            },
            "MultiDocumentSearchResponse.DocumentReadResponse": {
                "additionalProperties": false,
                "properties": {
                    "annotation_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Annotation IDs",
                        "type": "array"
                    },
                    "annotations": {
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        },
                        "title": "Annotations",
                        "type": "array"
                    },
                    "comments": {
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        },
                        "title": "Comments",
                        "type": "array"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "csl": {
                        "title": "Csl",
                        "type": "object"
                    },
                    "doctype": {
                        "title": "Doctype",
                        "type": "string"
                    },
                    "file_resource_size": {
                        "title": "File Resource Size",
                        "type": "integer"
                    },
                    "file_size": {
                        "title": "File Size",
                        "type": "integer"
                    },
                    "filename": {
                        "title": "Filename",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_trash": {
                        "title": "Is Trash",
                        "type": "boolean"
                    },
                    "keywords": {
                        "items": {},
                        "title": "Keywords",
                        "type": "array"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "pages": {
                        "title": "Pages",
                        "type": "integer"
                    },
                    "ranking": {
                        "title": "Ranking",
                        "type": "integer"
                    },
                    "resource_size": {
                        "title": "Resource Size",
                        "type": "integer"
                    },
                    "resource_stats": {
                        "$ref": "#/components/schemas/DocumentResourceStats"
                    },
                    "snippet": {
                        "title": "Snippet",
                        "type": "string"
                    },
                    "span": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Span",
                        "type": "array"
                    },
                    "status": {
                        "additionalProperties": {
                            "type": "integer"
                        },
                        "title": "Status",
                        "type": "object"
                    },
                    "suggested_tags": {
                        "items": {
                            "$ref": "#/components/schemas/SuggestedTag"
                        },
                        "title": "Suggested Tags",
                        "type": "array"
                    },
                    "tag_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Tag IDs",
                        "type": "array"
                    },
                    "tasks": {
                        "items": {
                            "$ref": "#/components/schemas/MultiDocumentSearchResponse.Task"
                        },
                        "title": "Tasks",
                        "type": "array"
                    },
                    "ui": {
                        "title": "Ui",
                        "type": "object"
                    },
                    "use_ocr": {
                        "title": "Use Ocr",
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserSimple"
                    }
                },
                "required": [
                    "annotation_ids",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "id",
                    "is_trash",
                    "use_ocr",
                    "meta",
                    "csl",
                    "ui",
                    "status",
                    "organization_id",
                    "tag_ids",
                    "user",
                    "doctype",
                    "file_size",
                    "pages",
                    "resource_size",
                    "file_resource_size"
                ],
                "title": "DocumentReadResponse",
                "type": "object"
            },
            "MultiDocumentSearchResponse.Tag": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "document_count": {
                        "title": "Document Count",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "color",
                    "document_count",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Tag",
                "type": "object"
            },
            "MultiDocumentSearchResponse.Task": {
                "additionalProperties": false,
                "properties": {
                    "args_json": {
                        "title": "Args Json",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At"
                    },
                    "function": {
                        "title": "Function",
                        "type": "string"
                    },
                    "group_id": {
                        "title": "Group ID",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "module": {
                        "title": "Module",
                        "type": "string"
                    },
                    "nrequeue": {
                        "title": "Nrequeue",
                        "type": "integer"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "type": "integer"
                    },
                    "parent_table": {
                        "title": "Parent Table",
                        "type": "string"
                    },
                    "runtime": {
                        "title": "Runtime",
                        "type": "number"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "traceback": {
                        "title": "Traceback",
                        "type": "string"
                    },
                    "updated_at": {
                        "title": "Updated At"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Task",
                "type": "object"
            },
            "Notification": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "creator": {
                        "title": "Creator",
                        "type": "object"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "payload": {
                        "title": "Payload",
                        "type": "object"
                    },
                    "read_at": {
                        "title": "Read At",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "user_id",
                    "scope",
                    "creator",
                    "payload",
                    "created_at"
                ],
                "title": "Notification",
                "type": "object"
            },
            "NotificationCountUnreadQuery": {
                "additionalProperties": false,
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "title": "NotificationCountUnreadQuery",
                "type": "object"
            },
            "NotificationCountUnreadResponse": {
                "additionalProperties": false,
                "properties": {
                    "num_unread": {
                        "title": "Num Unread",
                        "type": "integer"
                    }
                },
                "required": [
                    "num_unread"
                ],
                "title": "NotificationCountUnreadResponse",
                "type": "object"
            },
            "NotificationList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/NotificationList.Notification"
                },
                "title": "NotificationList",
                "type": "array"
            },
            "NotificationList.Notification": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "creator": {
                        "title": "Creator",
                        "type": "object"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "payload": {
                        "title": "Payload",
                        "type": "object"
                    },
                    "read_at": {
                        "title": "Read At",
                        "type": "string"
                    },
                    "scope": {
                        "title": "Scope",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "user_id",
                    "scope",
                    "creator",
                    "payload",
                    "created_at"
                ],
                "title": "Notification",
                "type": "object"
            },
            "NotificationListQuery": {
                "additionalProperties": false,
                "properties": {
                    "type": {
                        "title": "Type",
                        "type": "string"
                    },
                    "unread": {
                        "title": "Unread",
                        "type": "boolean"
                    }
                },
                "title": "NotificationListQuery",
                "type": "object"
            },
            "NotificationMarkBody": {
                "additionalProperties": false,
                "properties": {
                    "read": {
                        "title": "Read",
                        "type": "boolean"
                    }
                },
                "required": [
                    "read"
                ],
                "title": "NotificationMarkBody",
                "type": "object"
            },
            "Organization": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "description":"Creation time, by UTC",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description":"Admin-provided description of the Organization",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "description":"Unique ID of Organization",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "description": "Whether this is a personal Organization (automatically created upon user account creation)",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "description":"Metadata, for internal use",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "description":"Modification time, by UTC",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "description":"Last user to modify",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "description":"Name of Organization",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/OrganizationSchemaList"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description":"ID of owner",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "is_personal",
                    "meta",
                    "schema",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Organization",
                "type": "object"
            },
            "OrganizationSchema": {
                "additionalProperties": false,
                "properties": {
                    "default": {
                        "default": true,
                        "title": "Default",
                        "type": "boolean"
                    },
                    "description": {
                        "default": "",
                        "title": "Description",
                        "type": "string"
                    },
                    "label": {
                        "default": "",
                        "title": "Label",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "OrganizationSchema",
                "description":"Organization metadata, for internal use",
                "type": "object"
            },
            "OrganizationSchemaList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/OrganizationSchema"
                },
                "title": "OrganizationSchemaList",
                "type": "array"
            },
            "OrganizationChangeCreatorBody": {
                "additionalProperties": false,
                "properties": {
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "user_id"
                ],
                "title": "OrganizationChangeCreatorBody",
                "type": "object"
            },
            "OrganizationCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "creator_user_id": {
                        "title": "Creator User ID",
                        "type": "integer"
                    },
                    "organization_description": {
                        "title": "Organization Description",
                        "type": "string"
                    },
                    "organization_name": {
                        "title": "Organization Name",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_name",
                    "creator_user_id"
                ],
                "title": "OrganizationCreateBody",
                "type": "object"
            },
            "OrganizationCreateResponse": {
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "message",
                    "organization_id"
                ],
                "title": "OrganizationCreateResponse",
                "type": "object"
            },
            "OrganizationDetailed": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/OrganizationDetailed.OrganizationSchemaList"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationDetailed.UserDetailed"
                        },
                        "title": "Users",
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "is_personal",
                    "meta",
                    "schema",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "users"
                ],
                "title": "OrganizationDetailed",
                "type": "object"
            },
            "OrganizationDetailed.Organization": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/OrganizationDetailed.OrganizationSchemaList"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "is_personal",
                    "meta",
                    "schema",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Organization",
                "type": "object"
            },
            "OrganizationDetailed.OrganizationSchema": {
                "additionalProperties": false,
                "properties": {
                    "default": {
                        "default": true,
                        "title": "Default",
                        "type": "boolean"
                    },
                    "description": {
                        "default": "",
                        "title": "Description",
                        "type": "string"
                    },
                    "label": {
                        "default": "",
                        "title": "Label",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "OrganizationSchema",
                "type": "object"
            },
            "OrganizationDetailed.OrganizationSchemaList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/OrganizationDetailed.OrganizationSchema"
                },
                "title": "OrganizationSchemaList",
                "type": "array"
            },
            "OrganizationDetailed.UserDetailed": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "last_active_at": {
                        "title": "Last Active At",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Organization IDs",
                        "type": "array"
                    },
                    "organization_roles": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Organization Roles",
                        "type": "array"
                    },
                    "organizations": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationDetailed.Organization"
                        },
                        "title": "Organizations",
                        "type": "array"
                    },
                    "referral_id": {
                        "title": "Referral ID",
                        "type": "integer"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "created_at",
                    "meta",
                    "is_active",
                    "last_active_at",
                    "verification_status",
                    "organization_ids",
                    "organizations"
                ],
                "title": "UserDetailed",
                "type": "object"
            },
            "OrganizationDetailedList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/OrganizationDetailedList.OrganizationDetailed"
                },
                "title": "OrganizationDetailedList",
                "type": "array"
            },
            "OrganizationDetailedList.Organization": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/OrganizationDetailedList.OrganizationSchemaList"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "is_personal",
                    "meta",
                    "schema",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Organization",
                "type": "object"
            },
            "OrganizationDetailedList.OrganizationDetailed": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/OrganizationDetailedList.OrganizationSchemaList"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationDetailedList.UserDetailed"
                        },
                        "title": "Users",
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "is_personal",
                    "meta",
                    "schema",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "users"
                ],
                "title": "OrganizationDetailed",
                "type": "object"
            },
            "OrganizationDetailedList.OrganizationSchema": {
                "additionalProperties": false,
                "properties": {
                    "default": {
                        "default": true,
                        "title": "Default",
                        "type": "boolean"
                    },
                    "description": {
                        "default": "",
                        "title": "Description",
                        "type": "string"
                    },
                    "label": {
                        "default": "",
                        "title": "Label",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "OrganizationSchema",
                "type": "object"
            },
            "OrganizationDetailedList.OrganizationSchemaList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/OrganizationDetailedList.OrganizationSchema"
                },
                "title": "OrganizationSchemaList",
                "type": "array"
            },
            "OrganizationDetailedList.UserDetailed": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "last_active_at": {
                        "title": "Last Active At",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Organization IDs",
                        "type": "array"
                    },
                    "organization_roles": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Organization Roles",
                        "type": "array"
                    },
                    "organizations": {
                        "items": {
                            "$ref": "#/components/schemas/OrganizationDetailedList.Organization"
                        },
                        "title": "Organizations",
                        "type": "array"
                    },
                    "referral_id": {
                        "title": "Referral ID",
                        "type": "integer"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "created_at",
                    "meta",
                    "is_active",
                    "last_active_at",
                    "verification_status",
                    "organization_ids",
                    "organizations"
                ],
                "title": "UserDetailed",
                "type": "object"
            },
            "OrganizationList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/Organization"
                },
                "title": "OrganizationList",
                "type": "array"
            },
            "OrganizationList.Organization": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/OrganizationList.OrganizationSchemaList"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "is_personal",
                    "meta",
                    "schema",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Organization",
                "type": "object"
            },
            "OrganizationList.OrganizationSchema": {
                "additionalProperties": false,
                "properties": {
                    "default": {
                        "default": true,
                        "title": "Default",
                        "type": "boolean"
                    },
                    "description": {
                        "default": "",
                        "title": "Description",
                        "type": "string"
                    },
                    "label": {
                        "default": "",
                        "title": "Label",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "OrganizationSchema",
                "type": "object"
            },
            "OrganizationList.OrganizationSchemaList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/OrganizationList.OrganizationSchema"
                },
                "title": "OrganizationSchemaList",
                "type": "array"
            },
            "OrganizationSetRoleBody": {
                "additionalProperties": false,
                "properties": {
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "user_id",
                    "role"
                ],
                "title": "OrganizationSetRoleBody",
                "type": "object"
            },
            "OrganizationTaskQuery": {
                "additionalProperties": false,
                "properties": {
                    "initiated_after": {
                        "title": "Initiated After",
                        "type": "string"
                    },
                    "initiated_before": {
                        "title": "Initiated Before",
                        "type": "string"
                    }
                },
                "title": "OrganizationTaskQuery",
                "type": "object"
            },
            "OrganizationTaskResponse": {
                "additionalProperties": false,
                "properties": {
                    "storage": {
                        "title": "Storage",
                        "type": "object"
                    },
                    "tasks": {
                        "title": "Tasks",
                        "type": "object"
                    }
                },
                "required": [
                    "storage",
                    "tasks"
                ],
                "title": "OrganizationTaskResponse",
                "type": "object"
            },
            "OrganizationUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/OrganizationUpdateBody.OrganizationSchemaList"
                    }
                },
                "title": "OrganizationUpdateBody",
                "type": "object"
            },
            "OrganizationUpdateBody.OrganizationSchema": {
                "additionalProperties": false,
                "properties": {
                    "default": {
                        "default": true,
                        "title": "Default",
                        "type": "boolean"
                    },
                    "description": {
                        "default": "",
                        "title": "Description",
                        "type": "string"
                    },
                    "label": {
                        "default": "",
                        "title": "Label",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "OrganizationSchema",
                "type": "object"
            },
            "OrganizationUpdateBody.OrganizationSchemaList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/OrganizationUpdateBody.OrganizationSchema"
                },
                "title": "OrganizationSchemaList",
                "type": "array"
            },
            "OrganizationUsageResponse": {
                "additionalProperties": false,
                "properties": {
                    "plans": {
                        "items": {},
                        "title": "Plans",
                        "type": "array"
                    },
                    "usage": {
                        "title": "Usage",
                        "type": "object"
                    },
                    "usage_limits": {
                        "title": "Usage Limits",
                        "type": "object"
                    }
                },
                "required": [
                    "usage",
                    "usage_limits"
                ],
                "title": "OrganizationUsageResponse",
                "type": "object"
            },
            "OrganizationUserRemoveBody": {
                "additionalProperties": false,
                "properties": {
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "user_id"
                ],
                "title": "OrganizationUserRemoveBody",
                "type": "object"
            },
            "PaymentCheckoutBody": {
                "additionalProperties": false,
                "properties": {
                    "lookup_key": {
                        "title": "Lookup Key",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "redirect_url": {
                        "title": "Redirect Url",
                        "type": "string"
                    },
                    "rewardful_referral_id": {
                        "title": "Rewardful Referral ID",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id",
                    "lookup_key"
                ],
                "title": "PaymentCheckoutBody",
                "type": "object"
            },
            "PaymentCheckoutResponse": {
                "additionalProperties": false,
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "PaymentCheckoutResponse",
                "type": "object"
            },
            "PaymentPortalBody": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "PaymentPortalBody",
                "type": "object"
            },
            "PaymentPortalResponse": {
                "additionalProperties": false,
                "properties": {
                    "url": {
                        "title": "Url",
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "title": "PaymentPortalResponse",
                "type": "object"
            },
            "PaymentPreviewProrationQuery": {
                "additionalProperties": false,
                "properties": {
                    "lookup_key": {
                        "title": "Lookup Key",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id",
                    "lookup_key"
                ],
                "title": "PaymentPreviewProrationQuery",
                "type": "object"
            },
            "PaymentPreviewProrationResponse": {
                "additionalProperties": false,
                "properties": {
                    "items": {
                        "items": {},
                        "title": "Items",
                        "type": "array"
                    },
                    "total": {
                        "title": "Total",
                        "type": "integer"
                    }
                },
                "required": [
                    "items",
                    "total"
                ],
                "title": "PaymentPreviewProrationResponse",
                "type": "object"
            },
            "PaymentSubscriptionCancelBody": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "subscription_id": {
                        "title": "Subscription ID",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id",
                    "subscription_id"
                ],
                "title": "PaymentSubscriptionCancelBody",
                "type": "object"
            },
            "PaymentSubscriptionInfoQuery": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "PaymentSubscriptionInfoQuery",
                "type": "object"
            },
            "PaymentSubscriptionInfoResponse": {
                "additionalProperties": false,
                "properties": {
                    "plans": {
                        "items": {},
                        "title": "Plans",
                        "type": "array"
                    },
                    "usage": {
                        "title": "Usage",
                        "type": "object"
                    },
                    "usage_limits": {
                        "title": "Usage Limits",
                        "type": "object"
                    }
                },
                "required": [
                    "usage",
                    "usage_limits"
                ],
                "title": "PaymentSubscriptionInfoResponse",
                "type": "object"
            },
            "PaymentSubscriptionUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "lookup_key": {
                        "title": "Lookup Key",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id",
                    "lookup_key"
                ],
                "title": "PaymentSubscriptionUpdateBody",
                "type": "object"
            },
            "Referral": {
                "additionalProperties": false,
                "properties": {
                    "accepted_at": {
                        "title": "Accepted At",
                        "type": "string"
                    },
                    "declined_at": {
                        "title": "Declined At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "invite_id": {
                        "title": "Invite ID",
                        "type": "integer"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "referred_by_email": {
                        "title": "Referred By Email",
                        "type": "string"
                    },
                    "referred_by_user_id": {
                        "title": "Referred By User ID",
                        "type": "integer"
                    },
                    "sent_at": {
                        "title": "Sent At",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "email",
                    "referred_by_user_id",
                    "referred_by_email",
                    "sent_at"
                ],
                "title": "Referral",
                "type": "object"
            },
            "ReferralCodeAcceptBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "verification_code"
                ],
                "title": "ReferralCodeAcceptBody",
                "type": "object"
            },
            "ReferralCodeVerifyBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "verification_code"
                ],
                "title": "ReferralCodeVerifyBody",
                "type": "object"
            },
            "ReferralCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "ReferralCreateBody",
                "type": "object"
            },
            "ReferralList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/ReferralList.Referral"
                },
                "title": "ReferralList",
                "type": "array"
            },
            "ReferralList.Referral": {
                "additionalProperties": false,
                "properties": {
                    "accepted_at": {
                        "title": "Accepted At",
                        "type": "string"
                    },
                    "declined_at": {
                        "title": "Declined At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "invite_id": {
                        "title": "Invite ID",
                        "type": "integer"
                    },
                    "message": {
                        "title": "Message",
                        "type": "string"
                    },
                    "referred_by_email": {
                        "title": "Referred By Email",
                        "type": "string"
                    },
                    "referred_by_user_id": {
                        "title": "Referred By User ID",
                        "type": "integer"
                    },
                    "sent_at": {
                        "title": "Sent At",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "user_id",
                    "email",
                    "referred_by_user_id",
                    "referred_by_email",
                    "sent_at"
                ],
                "title": "Referral",
                "type": "object"
            },
            "ReferralUserPermittedQuery": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "ReferralUserPermittedQuery",
                "type": "object"
            },
            "ReferralUserPermittedResponse": {
                "additionalProperties": false,
                "properties": {
                    "exists": {
                        "title": "Exists",
                        "type": "boolean"
                    },
                    "has_password": {
                        "title": "Has Password",
                        "type": "boolean"
                    },
                    "permitted": {
                        "title": "Permitted",
                        "type": "boolean"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "type": "string"
                    }
                },
                "required": [
                    "exists",
                    "has_password",
                    "verification_status",
                    "permitted"
                ],
                "title": "ReferralUserPermittedResponse",
                "type": "object"
            },
            "ResetBody": {
                "additionalProperties": false,
                "properties": {
                    "additional_orgs": {
                        "items": {},
                        "title": "Additional Orgs",
                        "type": "array"
                    },
                    "default_org": {
                        "title": "Default Org",
                        "type": "object"
                    }
                },
                "title": "ResetBody",
                "type": "object"
            },
            "ResetResponse": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "success": {
                        "default": true,
                        "title": "Success",
                        "type": "boolean"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id",
                    "user_id"
                ],
                "title": "ResetResponse",
                "type": "object"
            },
            "ResponseResponse": {
                "additionalProperties": false,
                "properties": {
                    "response": {
                        "title": "Response"
                    },
                    "success": {
                        "default": false,
                        "title": "Success",
                        "type": "boolean"
                    }
                },
                "title": "ResponseResponse",
                "type": "object"
            },
            "SauceBasicSearch": {
                "additionalProperties": false,
                "properties": {
                    "query": {
                        "title": "Query",
                        "type": "string"
                    }
                },
                "required": [
                    "query"
                ],
                "title": "SauceBasicSearch",
                "type": "object"
            },
            "SauceDocList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/SauceDocList.SauceDoc"
                },
                "title": "SauceDocList",
                "type": "array"
            },
            "SauceDocList.SauceDoc": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    }
                },
                "required": [
                    "meta"
                ],
                "title": "SauceDoc",
                "type": "object"
            },
            "SauceMetaSearch": {
                "additionalProperties": false,
                "properties": {
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    }
                },
                "required": [
                    "meta"
                ],
                "title": "SauceMetaSearch",
                "type": "object"
            },
            "SearchQuery": {
                "additionalProperties": false,
                "properties": {
                    "html": {
                        "title": "Html"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "q": {
                        "default": "",
                        "title": "Q",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "SearchQuery",
                "type": "object"
            },
            "SearchResponse": {
                "additionalProperties": false,
                "properties": {
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/SearchResponse.SearchResult"
                        },
                        "title": "Results",
                        "type": "array"
                    },
                    "tags": {
                        "items": {
                            "$ref": "#/components/schemas/SearchResponse.Tag"
                        },
                        "title": "Tags",
                        "type": "array"
                    }
                },
                "required": [
                    "results",
                    "tags"
                ],
                "title": "SearchResponse",
                "type": "object"
            },
            "SearchResponse.SearchResult": {
                "additionalProperties": false,
                "properties": {
                    "annotation": {
                        "$ref": "#/components/schemas/Annotation"
                    },
                    "document": {
                        "$ref": "#/components/schemas/Document"
                    },
                    "ranking": {
                        "title": "Ranking",
                        "type": "integer"
                    },
                    "snippet": {
                        "title": "Snippet",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "document",
                    "ranking",
                    "snippet",
                    "type"
                ],
                "title": "SearchResult",
                "type": "object"
            },
            "SearchResponse.Tag": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "document_count": {
                        "title": "Document Count",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "color",
                    "document_count",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Tag",
                "type": "object"
            },
            "SignupCodeAcceptBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "verification_code"
                ],
                "title": "SignupCodeAcceptBody",
                "type": "object"
            },
            "SignupCodeVerifyBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "verification_code": {
                        "title": "Verification Code",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "verification_code"
                ],
                "title": "SignupCodeVerifyBody",
                "type": "object"
            },
            "SignupCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "SignupCreateBody",
                "type": "object"
            },
            "SignupEmailSendBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "SignupEmailSendBody",
                "type": "object"
            },
            "SignupRemindResponse": {
                "additionalProperties": false,
                "properties": {
                    "deleted": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Deleted",
                        "type": "array"
                    },
                    "remind_one_week": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Remind One Week",
                        "type": "array"
                    },
                    "remind_two_day": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Remind Two Day",
                        "type": "array"
                    }
                },
                "title": "SignupRemindResponse",
                "type": "object"
            },
            "SignupUserPermittedQuery": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "SignupUserPermittedQuery",
                "type": "object"
            },
            "SignupUserPermittedResponse": {
                "additionalProperties": false,
                "properties": {
                    "exists": {
                        "title": "Exists",
                        "type": "boolean"
                    },
                    "has_password": {
                        "title": "Has Password",
                        "type": "boolean"
                    },
                    "permitted": {
                        "title": "Permitted",
                        "type": "boolean"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "type": "string"
                    }
                },
                "required": [
                    "exists",
                    "has_password",
                    "verification_status",
                    "permitted"
                ],
                "title": "SignupUserPermittedResponse",
                "type": "object"
            },
            "SimpleSearchQuery": {
                "additionalProperties": false,
                "properties": {
                    "q": {
                        "default": "",
                        "title": "Q",
                        "type": "string"
                    }
                },
                "title": "SimpleSearchQuery",
                "type": "object"
            },
            "Site": {
                "additionalProperties": false,
                "properties": {
                    "build_uuid": {
                        "title": "Build Uuid",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "type": "object"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "publish_url": {
                        "title": "Publish Url",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "user_id",
                    "organization_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "data"
                ],
                "title": "Site",
                "type": "object"
            },
            "SiteCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "title": "Data",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "SiteCreateBody",
                "type": "object"
            },
            "SiteList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/SiteList.Site"
                },
                "title": "SiteList",
                "type": "array"
            },
            "SiteList.Site": {
                "additionalProperties": false,
                "properties": {
                    "build_uuid": {
                        "title": "Build Uuid",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "type": "object"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "publish_url": {
                        "title": "Publish Url",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "user_id",
                    "organization_id",
                    "created_at",
                    "modified_at",
                    "modified_by",
                    "data"
                ],
                "title": "Site",
                "type": "object"
            },
            "SiteUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "build_uuid": {
                        "title": "Build Uuid",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "publish_url": {
                        "title": "Publish Url",
                        "type": "string"
                    }
                },
                "title": "SiteUpdateBody",
                "type": "object"
            },
            "SuccessResponse": {
                "additionalProperties": false,
                "properties": {
                    "success": {
                        "default": true,
                        "title": "Success",
                        "type": "boolean"
                    }
                },
                "title": "SuccessResponse",
                "type": "object"
            },
            "Tag": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "document_count": {
                        "title": "Document Count",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "color",
                    "document_count",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Tag",
                "type": "object"
            },
            "TagAddDocumentsBody": {
                "additionalProperties": false,
                "properties": {
                    "document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Document IDs",
                        "type": "array"
                    }
                },
                "required": [
                    "document_ids"
                ],
                "title": "TagAddDocumentsBody",
                "type": "object"
            },
            "TagCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "add_document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Add Document IDs",
                        "type": "array"
                    },
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id",
                    "name"
                ],
                "title": "TagCreateBody",
                "type": "object"
            },
            "TagCreateManyBody": {
                "additionalProperties": false,
                "properties": {
                    "tags": {
                        "items": {
                            "$ref": "#/components/schemas/TagCreateManyBody.TagCreateBody"
                        },
                        "title": "Tags",
                        "type": "array"
                    }
                },
                "required": [
                    "tags"
                ],
                "title": "TagCreateManyBody",
                "type": "object"
            },
            "TagCreateManyBody.TagCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "add_document_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Add Document IDs",
                        "type": "array"
                    },
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id",
                    "name"
                ],
                "title": "TagCreateBody",
                "type": "object"
            },
            "TagList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/TagList.Tag"
                },
                "title": "TagList",
                "type": "array"
            },
            "TagList.Tag": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "document_count": {
                        "title": "Document Count",
                        "type": "integer"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "organization_id",
                    "name",
                    "color",
                    "document_count",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Tag",
                "type": "object"
            },
            "TagUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "color": {
                        "title": "Color",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "title": "TagUpdateBody",
                "type": "object"
            },
            "Task": {
                "additionalProperties": false,
                "properties": {
                    "args_json": {
                        "title": "Args Json",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created At"
                    },
                    "function": {
                        "title": "Function",
                        "type": "string"
                    },
                    "group_id": {
                        "title": "Group ID",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "string"
                    },
                    "module": {
                        "title": "Module",
                        "type": "string"
                    },
                    "nrequeue": {
                        "title": "Nrequeue",
                        "type": "integer"
                    },
                    "parent_id": {
                        "title": "Parent ID",
                        "type": "integer"
                    },
                    "parent_table": {
                        "title": "Parent Table",
                        "type": "string"
                    },
                    "runtime": {
                        "title": "Runtime",
                        "type": "number"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string"
                    },
                    "traceback": {
                        "title": "Traceback",
                        "type": "string"
                    },
                    "updated_at": {
                        "title": "Updated At"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Task",
                "type": "object"
            },
            "TaskIdResponse": {
                "additionalProperties": false,
                "properties": {
                    "task_id": {
                        "title": "Task ID",
                        "type": "string"
                    }
                },
                "title": "TaskIdResponse",
                "type": "object"
            },
            "TaskStatusResponse": {
                "additionalProperties": false,
                "properties": {
                    "extract": {
                        "title": "Extract",
                        "type": "string"
                    }
                },
                "required": [
                    "extract"
                ],
                "title": "TaskStatusResponse",
                "type": "object"
            },
            "TelemetryList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/TelemetryList.Telemetry"
                },
                "title": "TelemetryList",
                "type": "array"
            },
            "TelemetryList.Telemetry": {
                "additionalProperties": false,
                "properties": {
                    "action": {
                        "title": "Action",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "payload_json": {
                        "title": "Payload Json",
                        "type": "string"
                    },
                    "session_uuid": {
                        "title": "Session Uuid",
                        "type": "string"
                    },
                    "timestamp": {
                        "title": "Timestamp",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "session_uuid",
                    "action",
                    "payload_json",
                    "timestamp"
                ],
                "title": "Telemetry",
                "type": "object"
            },
            "TelemetryQuery": {
                "additionalProperties": false,
                "properties": {
                    "action": {
                        "title": "Action",
                        "type": "string"
                    },
                    "created_after": {
                        "title": "Created After",
                        "type": "string"
                    },
                    "created_before": {
                        "title": "Created Before",
                        "type": "string"
                    },
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "title": "TelemetryQuery",
                "type": "object"
            },
            "TotalUsageResponse": {
                "additionalProperties": false,
                "properties": {
                    "total_usage": {
                        "items": {
                            "type": "object"
                        },
                        "title": "Total Usage",
                        "type": "array"
                    }
                },
                "required": [
                    "total_usage"
                ],
                "title": "TotalUsageResponse",
                "type": "object"
            },
            "UserCreateBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "name",
                    "password"
                ],
                "title": "UserCreateBody",
                "type": "object"
            },
            "UserDetailed": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "last_active_at": {
                        "title": "Last Active At",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Organization IDs",
                        "type": "array"
                    },
                    "organization_roles": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Organization Roles",
                        "type": "array"
                    },
                    "organizations": {
                        "items": {
                            "$ref": "#/components/schemas/UserDetailed.Organization"
                        },
                        "title": "Organizations",
                        "type": "array"
                    },
                    "referral_id": {
                        "title": "Referral ID",
                        "type": "integer"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "created_at",
                    "meta",
                    "is_active",
                    "last_active_at",
                    "verification_status",
                    "organization_ids",
                    "organizations"
                ],
                "title": "UserDetailed",
                "type": "object"
            },
            "UserDetailed.Organization": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_personal": {
                        "title": "Is Personal",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "modified_at": {
                        "title": "Modified At",
                        "type": "string"
                    },
                    "modified_by": {
                        "title": "Modified By",
                        "type": "integer"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/UserDetailed.OrganizationSchemaList"
                    },
                    "user_id": {
                        "title": "User ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "description",
                    "is_personal",
                    "meta",
                    "schema",
                    "created_at",
                    "modified_at",
                    "modified_by"
                ],
                "title": "Organization",
                "type": "object"
            },
            "UserDetailed.OrganizationSchema": {
                "additionalProperties": false,
                "properties": {
                    "default": {
                        "default": true,
                        "title": "Default",
                        "type": "boolean"
                    },
                    "description": {
                        "default": "",
                        "title": "Description",
                        "type": "string"
                    },
                    "label": {
                        "default": "",
                        "title": "Label",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "OrganizationSchema",
                "type": "object"
            },
            "UserDetailed.OrganizationSchemaList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/UserDetailed.OrganizationSchema"
                },
                "title": "OrganizationSchemaList",
                "type": "array"
            },
            "UserExtraDetailedList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/UserExtraDetailedList.UserExtraDetailed"
                },
                "title": "UserExtraDetailedList",
                "type": "array"
            },
            "UserExtraDetailedList.UserExtraDetailed": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "last_active_at": {
                        "title": "Last Active At",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Organization IDs",
                        "type": "array"
                    },
                    "organization_roles": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Organization Roles",
                        "type": "array"
                    },
                    "referral_email": {
                        "title": "Referral Email",
                        "type": "string"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "storage": {
                        "title": "Storage",
                        "type": "object"
                    },
                    "tasks": {
                        "title": "Tasks",
                        "type": "object"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "created_at",
                    "meta",
                    "is_active",
                    "last_active_at",
                    "verification_status",
                    "organization_ids"
                ],
                "title": "UserExtraDetailed",
                "type": "object"
            },
            "UserJoinOrganizationBody": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "UserJoinOrganizationBody",
                "type": "object"
            },
            "UserLeaveOrganizationBody": {
                "additionalProperties": false,
                "properties": {
                    "organization_id": {
                        "title": "Organization ID",
                        "type": "integer"
                    }
                },
                "required": [
                    "organization_id"
                ],
                "title": "UserLeaveOrganizationBody",
                "type": "object"
            },
            "UserList": {
                "additionalProperties": false,
                "items": {
                    "$ref": "#/components/schemas/UserList.User"
                },
                "title": "UserList",
                "type": "array"
            },
            "UserList.User": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "title": "Created At",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "last_active_at": {
                        "title": "Last Active At",
                        "type": "string"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "organization_ids": {
                        "items": {
                            "type": "integer"
                        },
                        "title": "Organization IDs",
                        "type": "array"
                    },
                    "organization_roles": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Organization Roles",
                        "type": "array"
                    },
                    "role": {
                        "title": "Role",
                        "type": "string"
                    },
                    "verification_status": {
                        "title": "Verification Status",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "email",
                    "created_at",
                    "meta",
                    "is_active",
                    "last_active_at",
                    "verification_status",
                    "organization_ids"
                ],
                "title": "User",
                "type": "object"
            },
            "UserMetricsDaily": {
                "additionalProperties": false,
                "properties": {
                    "unique_monthly": {
                        "title": "Unique Monthly",
                        "type": "integer"
                    },
                    "unique_weekly": {
                        "title": "Unique Weekly",
                        "type": "integer"
                    },
                    "weekly_signups": {
                        "title": "Weekly Signups",
                        "type": "integer"
                    }
                },
                "required": [
                    "unique_weekly",
                    "unique_monthly",
                    "weekly_signups"
                ],
                "title": "UserMetricsDaily",
                "type": "object"
            },
            "UserMetricsHourly": {
                "additionalProperties": false,
                "properties": {
                    "active_hourly": {
                        "title": "Active Hourly",
                        "type": "integer"
                    },
                    "daily_signups": {
                        "title": "Daily Signups",
                        "type": "integer"
                    },
                    "recurring_daily": {
                        "title": "Recurring Daily",
                        "type": "integer"
                    }
                },
                "required": [
                    "active_hourly",
                    "daily_signups",
                    "recurring_daily"
                ],
                "title": "UserMetricsHourly",
                "type": "object"
            },
            "UserUpdateBody": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    },
                    "is_active": {
                        "title": "Is Active",
                        "type": "boolean"
                    },
                    "meta": {
                        "title": "Meta",
                        "type": "object"
                    },
                    "name": {
                        "title": "Name",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "type": "string"
                    }
                },
                "title": "UserUpdateBody",
                "type": "object"
            },
            "VerificationStatusQuery": {
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "title": "Email",
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "VerificationStatusQuery",
                "type": "object"
            },
            "VerificationStatusResponse": {
                "additionalProperties": false,
                "properties": {
                    "status": {
                        "title": "Status",
                        "type": "string"
                    }
                },
                "required": [
                    "status"
                ],
                "title": "VerificationStatusResponse",
                "type": "object"
            }
        }
    },
    "info": {
        "title": "Petal API Document",
        "description": "Reference document for Petal app",
        "license": {
            "name": "MIT"
        },
        "version": "1.2.5"
    },
    "servers": [
        {
            "url": "https://cite.petal.org"
        }
    ],
    "openapi": "3.0.3",
    "paths": {
        "/api/admin/cache_stats": {
            "get": {
                "description": "Accessible by: petal",
                "operationId": "get_/api/admin/cache_stats",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CacheStats"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Returns stats on API Proxy's cache",
                "tags": [
                    "admin"
                ]
            }
        },
        "/api/admin/login_as_user": {
            "post": {
                "description": "Accessible by: petal",
                "operationId": "post_/api/admin/login_as_user",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginAsUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Provides the access tokens for user log in.",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/admin/usage": {
            "get": {
                "description": "Accessible by: petal",
                "operationId": "get_/api/admin/usage",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TotalUsageResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all space used for every organization",
                "tags": [
                    "admin"
                ]
            }
        },
        "/api/ai-create/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/ai-create/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProjectList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List dicts of AI Create projects in organization",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/new": {
            "post": {
                "description": "Creates a project, find relevant documents, generate queries for each document, and generate answers for each question.",
                "operationId": "post_/api/ai-create/new",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICreateProjectCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProject"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create AI Create Project",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/ai-create/{project_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete AI Create Project",
                "tags": [
                    "ai-create"
                ]
            },
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/ai-create/{project_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProject"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read dict of AI Create Project",
                "tags": [
                    "ai-create"
                ]
            },
            "patch": {
                "description": "Allowed parameters: - document_ids: set list of context documents. And then generate queries for those that don't have any. - title - topic_summary - topic_main_points - visibility - meta",
                "operationId": "patch_/api/ai-create/{project_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICreateProjectUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProject"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update AI Create Project",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/doc_qa": {
            "post": {
                "description": "New DocQA will be in the response.\n\nFor AI generated question, set `qa_type` = \"ai\". Two LLM calls will be made, one to generate the question, and another to generate response.\n\nFor a blank QA, set `qa_type` = \"user\" and `query` to the question.",
                "operationId": "post_/api/ai-create/{project_id}/doc_qa",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICreateProjectNewQABody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProjectDocQA"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a new Document QA",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/doc_qa/list": {
            "get": {
                "description": "Accessible by: petal and authorized users for the Project",
                "operationId": "get_/api/ai-create/{project_id}/doc_qa/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProjectDocQAList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List dicts of Document QAs for AI Create Project",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/doc_qa/{doc_qa_id}": {
            "delete": {
                "description": "",
                "operationId": "delete_/api/ai-create/{project_id}/doc_qa/{doc_qa_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "doc_qa_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete Document QA",
                "tags": [
                    "ai-create"
                ]
            },
            "get": {
                "description": "",
                "operationId": "get_/api/ai-create/{project_id}/doc_qa/{doc_qa_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "doc_qa_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProjectDocQA"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Get QA",
                "tags": [
                    "ai-create"
                ]
            },
            "patch": {
                "description": "",
                "operationId": "patch_/api/ai-create/{project_id}/doc_qa/{doc_qa_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "doc_qa_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICreateProjectDocQAUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProjectDocQA"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Edit QA Response",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/doc_qa/{doc_qa_id}/run": {
            "post": {
                "description": "Any existing answer will be overwritten.\n\nUse case is for re-generating the response, e.g. after manually editing it.",
                "operationId": "post_/api/ai-create/{project_id}/doc_qa/{doc_qa_id}/run",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "doc_qa_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProjectDocQA"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Generates the QA response using AI",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/document/list": {
            "get": {
                "description": "Includes status of any tasks for generating queries for each document",
                "operationId": "get_/api/ai-create/{project_id}/document/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProjectDocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List Documents associated with the Project",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/template": {
            "post": {
                "description": "This does not trigger AI to write the response.\n\n`block_type` can be 'ai' or 'text'. `sort_order` is optional. If it's not provided, the new block will be placed at the end by setting sort_order = max(sort_orders) + 1.",
                "operationId": "post_/api/ai-create/{project_id}/template",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICreateTemplateBlockCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateTemplateBlock"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create template block",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/template/generate": {
            "post": {
                "description": "This will appended a number of template blocks to the existing template. Append instead of overwrite to avoid data loss.\n\nequivalent to Gradio's template_gen_func",
                "operationId": "post_/api/ai-create/{project_id}/template/generate",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateProject"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Generate report template using AI",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/template/list": {
            "get": {
                "description": "Accessible by: petal and authorized users for the Project",
                "operationId": "get_/api/ai-create/{project_id}/template/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateTemplateBlockList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List dicts of Template Blocks for AI Create Project",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/template/{id}": {
            "delete": {
                "description": "",
                "operationId": "delete_/api/ai-create/{project_id}/template/{id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete Template Block",
                "tags": [
                    "ai-create"
                ]
            },
            "get": {
                "description": "",
                "operationId": "get_/api/ai-create/{project_id}/template/{id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateTemplateBlock"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Get Template Block by ID",
                "tags": [
                    "ai-create"
                ]
            },
            "patch": {
                "description": "",
                "operationId": "patch_/api/ai-create/{project_id}/template/{id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICreateTemplateBlockUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateTemplateBlock"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update Template Block",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai-create/{project_id}/template/{id}/run": {
            "post": {
                "description": "Any existing content will be overwritten.\n\nUse case is for re-generating the content, e.g. after manually editing it.",
                "operationId": "post_/api/ai-create/{project_id}/template/{id}/run",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "project_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICreateTemplateBlock"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Generates the template block content using AI",
                "tags": [
                    "ai-create"
                ]
            }
        },
        "/api/ai/session/create": {
            "post": {
                "description": "Create an AI Chat session",
                "operationId": "post_/api/ai/session/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AISessionCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISession"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create an AI Chat Session",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/list": {
            "get": {
                "description": "List Sessions based on Document (single-doc) or Organization (multi-doc). Provide both Organization and Document IDs to fetch all single-doc Sessions for that particular Document, and provide only the Organization ID for all multi-doc Sessions in the Organization",
                "operationId": "get_/api/ai/session/list",
                "parameters": [
                    {
                        "description": "The unique ID of the Organization",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The unique ID of the Document, if desired",
                        "in": "query",
                        "name": "document_id",
                        "required": false,
                        "schema": {
                            "title": "Document ID",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISessionList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/ai/session/{ai_session_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISession"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read dict of AI chat session",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/ai/session/{ai_session_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Change AI chat session visibility to deleted",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}/qa/create": {
            "post": {
                "description": "Create a new message in a given AI Session",
                "operationId": "post_/api/ai/session/{ai_session_id}/qa/create",
                "parameters": [
                    {
                        "description": "The unique ID of the Session in which the new message is to be created",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIQABody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIQAList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Asks for an AI-generated answer from query.",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}/qa/list": {
            "get": {
                "description": "List all chat messages in an AI Session",
                "operationId": "get_/api/ai/session/{ai_session_id}/qa/list",
                "parameters": [
                    {
                        "description": "The unique ID of the AI Session",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIQAList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List dicts of AI chat queries and replies for a given session",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}/qa/{ai_qa_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization deleting their own answers",
                "operationId": "delete_/api/ai/session/{ai_session_id}/qa/{ai_qa_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_qa_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete an AI-generated answer. (Revokes associated jobs and marks it as \"deleted\")",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}/qa/{ai_qa_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/session/{ai_session_id}/qa/{ai_qa_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_qa_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIQAUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIQA"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update an AI-generated answer (set like/dislike).",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}/reset": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/session/{ai_session_id}/reset",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Clear AI session by setting every QA in it to \"deleted\"",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/session/{ai_session_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/session/{ai_session_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_session_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AISessionUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AISession"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update the visibility or metadata of an AI chat session",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/status": {
            "get": {
                "description": "Accessible by: all authorized users",
                "operationId": "get_/api/ai/status",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIStatusResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check to see if OpenAI model is operational by scraping https://raw.githubusercontent.com/ks-collab/upptime/master/history/open-ai-gpt-3-5-turbo.yml",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/create": {
            "post": {
                "description": "Create an AI Table",
                "operationId": "post_/api/ai/table/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AITableCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AITable"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "ai_table_create <POST>",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/ai/table/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AITableList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List dicts of AI tables in organization",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/ai/table/{ai_table_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AITable"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read dict of AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/cell/create": {
            "post": {
                "description": "Create an AI cell within a table, without invoking the AI to generate any response",
                "operationId": "post_/api/ai/table/{ai_table_id}/cell/create",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICellCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICell"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a cell in AI table, without invoking the AI on it",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/cell/list": {
            "get": {
                "description": "List all cells in an AI Table",
                "operationId": "get_/api/ai/table/{ai_table_id}/cell/list",
                "parameters": [
                    {
                        "description": "The unique ID of the AI Table",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICellList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read all AI cells in a table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/cell/{ai_cell_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/table/{ai_table_id}/cell/{ai_cell_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_cell_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AICellUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICell"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a cell in AI table, without invoking the AI on it",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/column/create": {
            "post": {
                "description": "Create a column within the given AI Table",
                "operationId": "post_/api/ai/table/{ai_table_id}/column/create",
                "parameters": [
                    {
                        "description": "The unique ID of the AI Table",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIColumnBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIColumn"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a column in the AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/column/list": {
            "get": {
                "description": "Accessible by: petal, organization members",
                "operationId": "get_/api/ai/table/{ai_table_id}/column/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIColumnList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read all AI columns in a table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/column/{ai_column_id}": {
            "get": {
                "description": "Accessible by: petal, owner of table, organization members (if table is shared)",
                "operationId": "get_/api/ai/table/{ai_table_id}/column/{ai_column_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_column_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIColumn"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Fetch an AI column",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/column/{ai_column_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and owner of collection",
                "operationId": "delete_/api/ai/table/{ai_table_id}/column/{ai_column_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_column_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete AI column",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/column/{ai_column_id}/run": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/table/{ai_table_id}/column/{ai_column_id}/run",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_column_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICellList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Run all cells in a column of an AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/column/{ai_column_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/table/{ai_table_id}/column/{ai_column_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_column_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIColumnBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIColumn"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a column in the AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/ai/table/{ai_table_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/document/{document_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/ai/table/{ai_table_id}/document/{document_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "collection_id",
                        "required": false,
                        "schema": {
                            "title": "Collection ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": false,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICellList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all cells in a row (i.e. for one document) of an AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/document/{document_id}/run": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/table/{ai_table_id}/document/{document_id}/run",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIRowRunBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICellList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Run all cells in a row (i.e. for one document) of an AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/run": {
            "post": {
                "description": "Create cells for the given column-Document pairs if cells do not already exist, and invoke the AI to generate responses for them",
                "operationId": "post_/api/ai/table/{ai_table_id}/run",
                "parameters": [
                    {
                        "description": "The unique ID of the AI Table",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AITableRunBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AICellList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Run selected cells in AI table cells are in [(document_id,column_id),(document_id,column_id),...] format",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/ai/table/{ai_table_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/ai/table/{ai_table_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "ai_table_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AITableUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AITable"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update the visibility or metadata or document list of an AI table",
                "tags": [
                    "ai"
                ]
            }
        },
        "/api/annotation/create": {
            "post": {
                "description": "The json fields \"type\", \"text\", \"comment\", \"description\", and \"meta\" will be populated with default values if not set.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/annotation/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnotationCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnotationDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create an annotation",
                "tags": [
                    "annotation"
                ]
            }
        },
        "/api/annotation/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/annotation/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "document_id",
                        "required": false,
                        "schema": {
                            "title": "Document ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "user_id",
                        "required": false,
                        "schema": {
                            "title": "User ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "modified_by",
                        "required": false,
                        "schema": {
                            "title": "Modified By",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "comment_count",
                        "required": false,
                        "schema": {
                            "title": "Comment Count",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "title": "Type",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "created_before",
                        "required": false,
                        "schema": {
                            "title": "Created Before",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "created_after",
                        "required": false,
                        "schema": {
                            "title": "Created After",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "modified_before",
                        "required": false,
                        "schema": {
                            "title": "Modified Before",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "modified_after",
                        "required": false,
                        "schema": {
                            "title": "Modified After",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "include_hidden",
                        "required": false,
                        "schema": {
                            "title": "Include Hidden",
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "sort_by",
                        "required": false,
                        "schema": {
                            "title": "Sort By",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "descending",
                        "required": false,
                        "schema": {
                            "title": "Descending",
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "schema": {
                            "title": "Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "page_size",
                        "required": false,
                        "schema": {
                            "title": "Page Size",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnotationListResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all annotations fitting given parameters. Paginated.",
                "tags": [
                    "annotation"
                ]
            }
        },
        "/api/annotation/meta_search": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/annotation/meta_search",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "default": "",
                            "title": "Q",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "html",
                        "required": false,
                        "schema": {
                            "title": "Html"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "schema": {
                            "title": "Page",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "page_size",
                        "required": false,
                        "schema": {
                            "title": "Page Size",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnotationListResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Search for annotations with metadata fuzzy-matching query string",
                "tags": [
                    "annotation",
                    "search"
                ]
            }
        },
        "/api/annotation/search": {
            "get": {
                "description": "NOT used by FE\n\nThe query \"html\" will return the results in html.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/annotation/search",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "default": "",
                            "title": "Q",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "html",
                        "required": false,
                        "schema": {
                            "title": "Html"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Search for results restricted to show only annotations",
                "tags": [
                    "annotation",
                    "search"
                ]
            }
        },
        "/api/annotation/{annotation_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/annotation/{annotation_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "annotation_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnotationDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read an annotation",
                "tags": [
                    "annotation"
                ]
            }
        },
        "/api/annotation/{annotation_id}/comment/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/annotation/{annotation_id}/comment/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "annotation_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all comments of an annotation",
                "tags": [
                    "annotation",
                    "comment"
                ]
            }
        },
        "/api/annotation/{annotation_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/annotation/{annotation_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "annotation_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete an annotation",
                "tags": [
                    "annotation"
                ]
            }
        },
        "/api/annotation/{annotation_id}/update": {
            "post": {
                "description": "The json fields \"type\", \"text\", \"description\", and \"meta\" are optional and will not be updated if not set.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/annotation/{annotation_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "annotation_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnotationUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnotationDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update an annotation",
                "tags": [
                    "annotation"
                ]
            }
        },
        "/api/attachment/create": {
            "post": {
                "description": "The form field \"filename\" will be populated from the file if not set.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/attachment/create",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create an attachment",
                "tags": [
                    "attachment"
                ]
            }
        },
        "/api/attachment/{attachment_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/attachment/{attachment_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "attachment_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read an attachment",
                "tags": [
                    "attachment"
                ]
            }
        },
        "/api/attachment/{attachment_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/attachment/{attachment_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "attachment_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete an attachment",
                "tags": [
                    "attachment"
                ]
            }
        },
        "/api/attachment/{attachment_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/attachment/{attachment_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "attachment_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update the attachment filename",
                "tags": [
                    "attachment"
                ]
            }
        },
        "/api/auth": {
            "post": {
                "description": "Provides the access tokens for user log in, as well as other identifying information",
                "operationId": "post_/api/auth",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Authenticates the user",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/check_stale": {
            "post": {
                "description": "The optional fields specify which resources to check for stale data. The endpoint returns the count of objects that are stale (updated after the last_fetched timestamp).\n\nAccessible by: all users",
                "operationId": "post_/api/check_stale",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckStaleBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckStaleResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Checks for stale data",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/citegen/list/create": {
            "post": {
                "description": "Accessible by: logged-in users",
                "operationId": "post_/api/citegen/list/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CiteGenListCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CiteGenListResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create citation sources list",
                "tags": [
                    "citegen"
                ]
            }
        },
        "/api/citegen/list/{id}/delete": {
            "delete": {
                "description": "Accessible by: logged-in users owning item to be deleted",
                "operationId": "delete_/api/citegen/list/{id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete citation sources list",
                "tags": [
                    "citegen"
                ]
            }
        },
        "/api/citegen/list/{id}/update": {
            "post": {
                "description": "Accessible by: logged-in users owning item to be updated",
                "operationId": "post_/api/citegen/list/{id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CiteGenListUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CiteGenListResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update citation sources list",
                "tags": [
                    "citegen"
                ]
            }
        },
        "/api/citegen/lists": {
            "get": {
                "description": "Accessible by: logged-in users",
                "operationId": "get_/api/citegen/lists",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CiteGenListResponseList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Get all citation sources lists belonging to user",
                "tags": [
                    "citegen"
                ]
            }
        },
        "/api/citegen/query": {
            "post": {
                "description": "",
                "operationId": "post_/api/citegen/query",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CiteGenQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CiteGenSearchResults"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "citegen's search endpoint",
                "tags": [
                    "citegen"
                ]
            }
        },
        "/api/citegen/search": {
            "post": {
                "description": "",
                "operationId": "post_/api/citegen/search",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CiteGenSearchQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CiteGenSearchResults"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "citegen_search <POST>",
                "tags": [
                    "citegen"
                ]
            }
        },
        "/api/collection/create": {
            "post": {
                "description": "The optional document_ids will add those documents to the created collection. Collections are not shared (viewable by other users) by default. Trashed documents cannot be added to collection. Collection names may be duplicated if the frontend requires. This is so users can upload entire folders, which may have nested folders with the same name. They will all be uploaded with parent_id=0, then re-shuffled into order later via the /update endpoint.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/collection/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a collection",
                "tags": [
                    "collection"
                ]
            }
        },
        "/api/collection/delete": {
            "post": {
                "description": "Accessible by: petal and owner of collection",
                "operationId": "post_/api/collection/delete",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionDeleteBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete collections",
                "tags": [
                    "collection"
                ]
            }
        },
        "/api/collection/update": {
            "post": {
                "description": "Accessible by: petal and owner of collection",
                "operationId": "post_/api/collection/update",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update collections",
                "tags": [
                    "collection"
                ]
            }
        },
        "/api/collection/{collection_id}": {
            "get": {
                "description": "Accessible by: petal, owner of collection, organization members (if collection is shared)",
                "operationId": "get_/api/collection/{collection_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "collection_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read information of a collection",
                "tags": [
                    "collection"
                ]
            }
        },
        "/api/collection/{collection_id}/document/list": {
            "get": {
                "description": "Accessible by: petal, owner of collection, organization members (if collection is shared), public (if collection used in site)",
                "operationId": "get_/api/collection/{collection_id}/document/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "collection_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List documents in collection",
                "tags": [
                    "collection"
                ]
            }
        },
        "/api/collection/{collection_id}/document/list_all": {
            "get": {
                "description": "Accessible by: petal, owner of collection, organization members (if collection is shared), public (if collection used in site)",
                "operationId": "get_/api/collection/{collection_id}/document/list_all",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "collection_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List documents in collection, and in child collections",
                "tags": [
                    "collection"
                ]
            }
        },
        "/api/comment/create": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/comment/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a comment",
                "tags": [
                    "comment"
                ]
            }
        },
        "/api/comment/{comment_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/comment/{comment_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "comment_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read a comment",
                "tags": [
                    "comment"
                ]
            }
        },
        "/api/comment/{comment_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/comment/{comment_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "comment_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete a comment",
                "tags": [
                    "comment"
                ]
            }
        },
        "/api/comment/{comment_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/comment/{comment_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "comment_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a comment",
                "tags": [
                    "comment"
                ]
            }
        },
        "/api/connect/media/{media_id}": {
            "delete": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "delete_/api/connect/media/{media_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "media_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete media",
                "tags": [
                    "media"
                ]
            }
        },
        "/api/connect/site/create": {
            "post": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "post_/api/connect/site/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SiteCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a site",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/list": {
            "get": {
                "description": "Accessible by: petal and any authorized user",
                "operationId": "get_/api/connect/site/list",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List the sites belonging to current user",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/{site_id}": {
            "get": {
                "description": "Accessible by: petal and authorized organization admins and members",
                "operationId": "get_/api/connect/site/{site_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read a site",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/{site_id}/build": {
            "post": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "post_/api/connect/site/{site_id}/build",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Build"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Build site",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/{site_id}/build/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "delete_/api/connect/site/{site_id}/build/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BuildDelMultiBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete multiple builds by id or uuid, passed as lists",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/{site_id}/build/list": {
            "get": {
                "description": "Accessible by: petal and authorized organization admins and members",
                "operationId": "get_/api/connect/site/{site_id}/build/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BuildList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Return list of builds associated with site_id",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/{site_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "delete_/api/connect/site/{site_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete a site",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/{site_id}/media/create": {
            "post": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "post_/api/connect/site/{site_id}/media/create",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Media"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a media",
                "tags": [
                    "media"
                ]
            }
        },
        "/api/connect/site/{site_id}/media/list": {
            "get": {
                "description": "Accessible by: petal and authorized admins and users of site's organization",
                "operationId": "get_/api/connect/site/{site_id}/media/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MediaList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all media within a site",
                "tags": [
                    "site",
                    "media"
                ]
            }
        },
        "/api/connect/site/{site_id}/unpublish": {
            "post": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "post_/api/connect/site/{site_id}/unpublish",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Unpublish current build of site",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/connect/site/{site_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized organization admins",
                "operationId": "post_/api/connect/site/{site_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "site_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SiteUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a site",
                "tags": [
                    "site"
                ]
            }
        },
        "/api/discourse/sso_redirect": {
            "post": {
                "description": "Expects a model.DiscourseSSORedirect: {sso: str, sig: str}\n\nAccessible by: logged-in users",
                "operationId": "post_/api/discourse/sso_redirect",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscourseRedirectURL"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Verifies sign-in attempt from discourse is legit",
                "tags": [
                    "discourse"
                ]
            }
        },
        "/api/document/copy": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization of destination project",
                "operationId": "post_/api/document/copy",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentCopyBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentCopyResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Copy documents to another organization",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/create": {
            "post": {
                "description": "Create a Document by uploading your file to Petal",
                "operationId": "post_/api/document/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "organization_id": {
                                        "description": "Unique ID of Organization",
                                        "type": "integer"
                                    },
                                    "doctype": {
                                        "description": "Type of file, such as pdf, txt, etc.",
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "Binary representation of the file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/create_stubs": {
            "post": {
                "description": "Accessible by: authorized users",
                "operationId": "post_/api/document/create_stubs",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentStubCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create document stubs",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/delete": {
            "delete": {
                "description": "Permanently delete Documents and all their associated Annotations, comments, AI Sessions, etc.",
                "operationId": "delete_/api/document/delete",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentDelMultiBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete multiple documents",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/doi_lookup": {
            "post": {
                "description": "Accessible by: authorized users",
                "operationId": "post_/api/document/doi_lookup",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentLookupBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentLookupResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Searches for document DOI via crossref using author and title",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/doi_search": {
            "get": {
                "description": "Accessible by: authorized users",
                "operationId": "get_/api/document/doi_search",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "doi",
                        "required": true,
                        "schema": {
                            "title": "Doi",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentDoiSearchResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Given a comma-separated list of DOI strings, e.g. '?doi=12/34,45/a2' returns object of DOI string keys to parsed bibtex properties as values",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/keywords": {
            "post": {
                "description": "Weights are optional. The endpoint will use the document order if weights are not set.\n\nNOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/keywords",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentKeywordsBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentKeywordsResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Returns the keywords in a list of documents",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/list": {
            "post": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/list",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentListQuery"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List documents when given list of IDs",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/restore": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/restore",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentRestoreBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Restore list of documents from trash",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/search": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/search",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "default": "",
                            "title": "Q",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "html",
                        "required": false,
                        "schema": {
                            "title": "Html"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "meta",
                        "required": false,
                        "schema": {
                            "title": "Meta",
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "text",
                        "required": false,
                        "schema": {
                            "title": "Text",
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "rows",
                        "required": false,
                        "schema": {
                            "title": "Rows",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiDocumentSearchResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Search for results restricted to show only documents. \"rows\" sets the number of results to return. If there are a lot of documents in an org, or if searching within a collection, then it might be better to set this higher, since the results are further filtered on the FE depending on collection. meta T + text T: search only meta meta T + text F: search meta and text meta F + text T: search only text meta F + text F: search meta and text",
                "tags": [
                    "document",
                    "search"
                ]
            }
        },
        "/api/document/semantic_search": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/semantic_search",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "default": "",
                            "title": "Q",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "html",
                        "required": false,
                        "schema": {
                            "title": "Html"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "meta",
                        "required": false,
                        "schema": {
                            "title": "Meta",
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "text",
                        "required": false,
                        "schema": {
                            "title": "Text",
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "rows",
                        "required": false,
                        "schema": {
                            "title": "Rows",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiDocumentSearchResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Run semantic search against snippets in document database",
                "tags": [
                    "document",
                    "search"
                ]
            }
        },
        "/api/document/trash": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/trash",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentTrashBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Trash list of documents",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}": {
            "get": {
                "description": "Fetch detailed information on a single Document by its unique ID",
                "operationId": "get_/api/document/{document_id}",
                "parameters": [
                    {
                        "description": "The unique ID of the Document",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentReadResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/add_tags": {
            "post": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/{document_id}/add_tags",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentAddTagBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Add tags to a document",
                "tags": [
                    "document",
                    "tag"
                ]
            }
        },
        "/api/document/{document_id}/annotation/list": {
            "get": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/annotation/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnotationDetailedList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all annotations of a document",
                "tags": [
                    "document",
                    "annotation"
                ]
            }
        },
        "/api/document/{document_id}/attachment/list": {
            "get": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/attachment/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttachmentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all attachments of a document",
                "tags": [
                    "document",
                    "attachment"
                ]
            }
        },
        "/api/document/{document_id}/force_create_embedding": {
            "post": {
                "description": "Accessible by: petal only",
                "operationId": "post_/api/document/{document_id}/force_create_embedding",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskIdResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Embeds a document below 5M characters",
                "tags": [
                    "document",
                    "ai"
                ]
            }
        },
        "/api/document/{document_id}/links": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/links",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentLinksResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Retrieve the links inside a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/meta": {
            "get": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/meta",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DictResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read the metadata of a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/outline": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/outline",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentOutlineResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read the outline information of a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/regex": {
            "post": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/{document_id}/regex",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentRegexBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentRegexResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Runs a regular expression against a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/remove_tags": {
            "post": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/{document_id}/remove_tags",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentAddTagBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Remove tags from a document",
                "tags": [
                    "document",
                    "tag"
                ]
            }
        },
        "/api/document/{document_id}/rerun_upload": {
            "post": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/{document_id}/rerun_upload",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentRerunUploadBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskIdResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Reruns the document uploading task",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/resources": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/resources",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentResourceStats"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Compute the resource stats for a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/search": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/search",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "default": "",
                            "title": "Q",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentSearchResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Search within a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/suggested_tags": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/suggested_tags",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentSuggestedTagsResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Compute and return the suggested tags of a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/task_status": {
            "get": {
                "description": "NOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/task_status",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskStatusResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check the tasks status of a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/text_spans": {
            "get": {
                "description": "The queries \"start_indices\" and \"end_indices\" are comma-separated lists of character indices.\n\nNOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/document/{document_id}/text_spans",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "start_indices",
                        "required": true,
                        "schema": {
                            "title": "Start Indices",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "end_indices",
                        "required": true,
                        "schema": {
                            "title": "End Indices",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentTextSpansResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Return spans of plain text of a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/toggle_ocr": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/{document_id}/toggle_ocr",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentToggleOcrBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Toggle whether to use OCR for a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/update": {
            "post": {
                "description": "Same as creating a document, if there is multipart/form-data, the fields \"content\" and \"filename\" are ignored and obtained from the uploaded file.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/{document_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a document",
                "tags": [
                    "document"
                ]
            }
        },
        "/api/document/{document_id}/update_tags": {
            "post": {
                "description": "This will remove all the current tags of a document and add all the tags in \"tag_ids\".\n\nNOT used by FE\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/document/{document_id}/update_tags",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "document_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DocumentAddTagBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Document"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update all the tags of a document",
                "tags": [
                    "document",
                    "tag"
                ]
            }
        },
        "/api/error/report": {
            "post": {
                "description": "Prints the report to stdout in local environment.\n\nAccessible by: all users",
                "operationId": "post_/api/error/report",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ErrorReportBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Report error to Slack channel",
                "tags": [
                    "error"
                ]
            }
        },
        "/api/extraction/rule/create": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/extraction/rule/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoExtractionRuleCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoExtractionRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create an auto extraction rule",
                "tags": [
                    "extraction"
                ]
            }
        },
        "/api/extraction/rule/{rule_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/extraction/rule/{rule_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoExtractionRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read information of an auto extraction rule",
                "tags": [
                    "extraction"
                ]
            }
        },
        "/api/extraction/rule/{rule_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/extraction/rule/{rule_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete an auto extraction rule",
                "tags": [
                    "extraction"
                ]
            }
        },
        "/api/extraction/rule/{rule_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/extraction/rule/{rule_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoExtractionRuleUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoExtractionRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update an auto extraction rule",
                "tags": [
                    "extraction"
                ]
            }
        },
        "/api/file/{file_id}": {
            "get": {
                "description": "Accessible by: petal",
                "operationId": "get_/api/file/{file_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read a file",
                "tags": [
                    "file"
                ]
            }
        },
        "/api/file/{file_id}/delete": {
            "delete": {
                "description": "Accessible by: petal",
                "operationId": "delete_/api/file/{file_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete a file and all associated documents",
                "tags": [
                    "file"
                ]
            }
        },
        "/api/file/{file_id}/document/list": {
            "get": {
                "description": "Accessible by: petal",
                "operationId": "get_/api/file/{file_id}/document/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all documents sharing the same file",
                "tags": [
                    "file"
                ]
            }
        },
        "/api/file/{file_id}/recommit": {
            "post": {
                "description": "Rerun all file ingest tasks.\n\nAccessible by: petal",
                "operationId": "post_/api/file/{file_id}/recommit",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Recommit a file",
                "tags": [
                    "file"
                ]
            }
        },
        "/api/file/{file_id}/update": {
            "post": {
                "description": "Warning: may mess up annotations, etc., when replacing one file with another. Use with caution\n\nAccessible by: petal",
                "operationId": "post_/api/file/{file_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "file_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a file",
                "tags": [
                    "file"
                ]
            }
        },
        "/api/invite/existing_user/create": {
            "post": {
                "description": "Sends an email alert and creates a notification.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/invite/existing_user/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Invites an existing user to an organization",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/invite/new_user/create": {
            "post": {
                "description": "Creates user in db, sends a referral email, and creates a notification.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/invite/new_user/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Invites a new user to an organization",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/invite/organization/{organization_id}/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/invite/organization/{organization_id}/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InviteList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all invites sent out by an organization",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/invite/user/permitted": {
            "get": {
                "description": "Accessible by: petal and authorized users in organization",
                "operationId": "get_/api/invite/user/permitted",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "email",
                        "required": true,
                        "schema": {
                            "title": "Email",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "role",
                        "required": true,
                        "schema": {
                            "title": "Role",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InviteUserPermittedResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check if user can be invited to the organization",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/invite/user/{user_id}/received": {
            "get": {
                "description": "Accessible by: petal and authorized users viewing their own received invites",
                "operationId": "get_/api/invite/user/{user_id}/received",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InviteList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all organization invites received by a given user",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/invite/{invite_id}/accept": {
            "post": {
                "description": "If invitation to an organization exists for current user, adds user to the organization and updates invite as accepted. Mark all other invites to org as delined.\n\nAccessible by: authorized users accepting invites directed at them",
                "operationId": "post_/api/invite/{invite_id}/accept",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "invite_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Accept invitation to an organization",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/invite/{invite_id}/decline": {
            "post": {
                "description": "If invite to an organization exists for current user, mark as declined The sender of that invite is notified\n\nAccessible by: authorized users declining invites directed at them",
                "operationId": "post_/api/invite/{invite_id}/decline",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "invite_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Decline an invitation to an organization",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/invite/{invite_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users who created the invites",
                "operationId": "delete_/api/invite/{invite_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "invite_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete an invitation to an organization",
                "tags": [
                    "invite"
                ]
            }
        },
        "/api/logout": {
            "delete": {
                "description": "",
                "operationId": "delete_/api/logout",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "modify_token <DELETE>",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/notification/count_unread": {
            "get": {
                "description": "Accessible by: authorized users",
                "operationId": "get_/api/notification/count_unread",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "title": "Type",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationCountUnreadResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Returns number of unread notifications for current user",
                "tags": [
                    "notification"
                ]
            }
        },
        "/api/notification/list": {
            "get": {
                "description": "The unread flag toggles between showing ONLY unread (true) or showing everything (false)\n\nAccessible by: authorized users",
                "operationId": "get_/api/notification/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "title": "Type",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "unread",
                        "required": false,
                        "schema": {
                            "title": "Unread",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Fetch list of notifications for current user",
                "tags": [
                    "notification"
                ]
            }
        },
        "/api/notification/{notification_id}/delete": {
            "delete": {
                "description": "Accessible by: authorized users deleting their own notification",
                "operationId": "delete_/api/notification/{notification_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "notification_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Directly delete a notification",
                "tags": [
                    "notification"
                ]
            }
        },
        "/api/notification/{notification_id}/mark": {
            "post": {
                "description": "Accessible by: authorized users marking their own notification",
                "operationId": "post_/api/notification/{notification_id}/mark",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "notification_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationMarkBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Mark notification as read/unread",
                "tags": [
                    "notification"
                ]
            }
        },
        "/api/oauth/auth/{client_name}": {
            "get": {
                "description": "",
                "operationId": "get_/api/oauth/auth/{client_name}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "client_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Try to obtain authorization token Accessible by: all users",
                "tags": [
                    "oauth"
                ]
            }
        },
        "/api/organization/create": {
            "post": {
                "description": "Accessible by: authorized users",
                "operationId": "post_/api/organization/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationCreateResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a team organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/list": {
            "get": {
                "description": "Accessible by: petal (authorized users belonging to kaleidoglobe organization with organization_id=1, as well as with e-mails ending in @test.com or @kaleidoglobe.com or @petal.org)",
                "operationId": "get_/api/organization/list",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationDetailedList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List detailed organizations",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read information on an organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/collection/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}/collection/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all collections owned by the current user and all shared collections in a organization",
                "tags": [
                    "organization",
                    "collection"
                ]
            }
        },
        "/api/organization/{organization_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and organization creator",
                "operationId": "delete_/api/organization/{organization_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete an organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/document/list": {
            "get": {
                "description": "List all Documents within an Organization",
                "operationId": "get_/api/organization/{organization_id}/document/list",
                "parameters": [
                    {
                        "description": "The unique ID of the Organization",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all documents within a organization",
                "tags": [
                    "organization",
                    "document"
                ]
            }
        },
        "/api/organization/{organization_id}/leave": {
            "post": {
                "description": "Accessible by: authorized users within organization",
                "operationId": "post_/api/organization/{organization_id}/leave",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Leave an organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/tag/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}/tag/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all tags in a organization",
                "tags": [
                    "organization",
                    "tag"
                ]
            }
        },
        "/api/organization/{organization_id}/tag/rule/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}/tag/rule/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoTaggingRuleList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all auto tagging rules in a organization",
                "tags": [
                    "organization",
                    "tag"
                ]
            }
        },
        "/api/organization/{organization_id}/tasks": {
            "get": {
                "description": "initiated_before and initiated_after in query allows for filtering tasks within specified timeframe\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}/tasks",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "initiated_before",
                        "required": false,
                        "schema": {
                            "title": "Initiated Before",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "initiated_after",
                        "required": false,
                        "schema": {
                            "title": "Initiated After",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationTaskResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all space used for given organization and all tasks related to its docs/annotations associated with those docs",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/trash": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}/trash",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all documents in the trash of a organization",
                "tags": [
                    "organization",
                    "document"
                ]
            }
        },
        "/api/organization/{organization_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/organization/{organization_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update the name/description/schema of a organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/usage": {
            "get": {
                "description": "Values are retrieved from organization's meta_json and updated if necessary\n\nAccessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}/usage",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationUsageResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Lists storage usage, number of members and guests, number of documents, and number of websites in organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/user/change_creator": {
            "post": {
                "description": "Accessible by: petal only",
                "operationId": "post_/api/organization/{organization_id}/user/change_creator",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationChangeCreatorBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Make another user the organization's creator",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/user/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/organization/{organization_id}/user/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List the users of an organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/user/remove": {
            "post": {
                "description": "Accessible by: petal and organization admins",
                "operationId": "post_/api/organization/{organization_id}/user/remove",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUserRemoveBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Remove a user from an organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/organization/{organization_id}/user/set_role": {
            "post": {
                "description": "Admins can promote/demote other users to admins or regular members. They cannot demote themselves or the org's creator.\n\nAccessible by: petal and organization admins",
                "operationId": "post_/api/organization/{organization_id}/user/set_role",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationSetRoleBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Change a user's role within an organization",
                "tags": [
                    "organization"
                ]
            }
        },
        "/api/payment/cancel_subscription": {
            "post": {
                "description": "Accessible by: petal and authorized organization owners",
                "operationId": "post_/api/payment/cancel_subscription",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentSubscriptionCancelBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Cancel a subscription with the given ID",
                "tags": [
                    "payment"
                ]
            }
        },
        "/api/payment/create_checkout_session": {
            "post": {
                "description": "Accessible by: petal and authorized organization owners",
                "operationId": "post_/api/payment/create_checkout_session",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentCheckoutBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentCheckoutResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Start Stripe checkout session",
                "tags": [
                    "payment"
                ]
            }
        },
        "/api/payment/create_portal_session": {
            "post": {
                "description": "Accessible by: petal and authorized organization owners",
                "operationId": "post_/api/payment/create_portal_session",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentPortalBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentPortalResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Start Stripe user management portal session",
                "tags": [
                    "payment"
                ]
            }
        },
        "/api/payment/preview_proration": {
            "get": {
                "description": "Only use for users with previous paid subscription (not wechat/one-time payment)\n\nAccessible by: petal and authorized organization owners",
                "operationId": "get_/api/payment/preview_proration",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "lookup_key",
                        "required": true,
                        "schema": {
                            "title": "Lookup Key",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentPreviewProrationResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Preview the next invoice generated by updating a subscription to one that matches the provided lookup_key",
                "tags": [
                    "payment"
                ]
            }
        },
        "/api/payment/subscription_info": {
            "get": {
                "description": "Also fetch all plan info for an organization and update usage limits and current usage\n\nAccessible by: petal and authorized organization owners",
                "operationId": "get_/api/payment/subscription_info",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentSubscriptionInfoResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Return usage limits, current usage, and plans purchased by an organization",
                "tags": [
                    "payment"
                ]
            }
        },
        "/api/payment/update_subscription": {
            "post": {
                "description": "Only use for users with previous paid subscription\n\nAccessible by: petal and authorized organization owners",
                "operationId": "post_/api/payment/update_subscription",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentSubscriptionUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a subscription to the plan that matches the provided lookup_key",
                "tags": [
                    "payment"
                ]
            }
        },
        "/api/referral/code/accept": {
            "post": {
                "description": "Returns the auth token to allow user to update information.\n\nAccessible by: all users",
                "operationId": "post_/api/referral/code/accept",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReferralCodeAcceptBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Accept the referral code",
                "tags": [
                    "referral"
                ]
            }
        },
        "/api/referral/code/verify": {
            "post": {
                "description": "Accessible by: all users",
                "operationId": "post_/api/referral/code/verify",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReferralCodeVerifyBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check if referral code is valid",
                "tags": [
                    "referral"
                ]
            }
        },
        "/api/referral/create": {
            "post": {
                "description": "Accessible by: authorized users",
                "operationId": "post_/api/referral/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReferralCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Creates user in db and sends referral email with new verification code",
                "tags": [
                    "referral"
                ]
            }
        },
        "/api/referral/user/permitted": {
            "get": {
                "description": "Check if user exists and has accepted a code/oauthed\n\nAccessible by: all authorized users",
                "operationId": "get_/api/referral/user/permitted",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "email",
                        "required": true,
                        "schema": {
                            "title": "Email",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferralUserPermittedResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check if referral email can be sent to the address",
                "tags": [
                    "referral"
                ]
            }
        },
        "/api/referral/{referral_id}/delete": {
            "delete": {
                "description": "Accessible by: authorized users deleting the referrals they've sent to others",
                "operationId": "delete_/api/referral/{referral_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "referral_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Directly delete a referral",
                "tags": [
                    "referral"
                ]
            }
        },
        "/api/reset": {
            "post": {
                "description": "Deletes all documents, resets the database and creates the default testing organization and user\n\nAccessible by: all users, dev environments only",
                "operationId": "post_/api/reset",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Resets the application",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/sauce/basic_search": {
            "post": {
                "description": "",
                "operationId": "post_/api/sauce/basic_search",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SauceBasicSearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SauceDocList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "sauce_basic_search <POST>",
                "tags": [
                    "sauce"
                ]
            }
        },
        "/api/sauce/meta_search": {
            "post": {
                "description": "",
                "operationId": "post_/api/sauce/meta_search",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SauceMetaSearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SauceDocList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "See build_solr_query() for details.",
                "tags": [
                    "sauce"
                ]
            }
        },
        "/api/search": {
            "get": {
                "description": "The query \"html\" will return the results in html.\n\nAccessible by: authorized users within organization",
                "operationId": "get_/api/search",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "default": "",
                            "title": "Q",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": true,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "html",
                        "required": false,
                        "schema": {
                            "title": "Html"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Search for results within the organization",
                "tags": [
                    "search"
                ]
            }
        },
        "/api/signup/code/accept": {
            "post": {
                "description": "Returns the auth token.\n\nAccessible by: all users",
                "operationId": "post_/api/signup/code/accept",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupCodeAcceptBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Accept the verification code",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/code/verify": {
            "post": {
                "description": "Accessible by: all users",
                "operationId": "post_/api/signup/code/verify",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupCodeVerifyBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check if signup verification code is valid",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/create": {
            "post": {
                "description": "Accessible by: all users",
                "operationId": "post_/api/signup/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create user in db if needed and send signup email with new verification code",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/email/send": {
            "post": {
                "description": "User should log in using /api/signup/code/accept\n\nAccessible by: all users",
                "operationId": "post_/api/signup/email/send",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupEmailSendBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Send existing user a verification code so they can log in with it",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/forgot_password/code/accept": {
            "post": {
                "description": "Returns the auth token to allow user to update information.\n\nAccessible by: all users",
                "operationId": "post_/api/signup/forgot_password/code/accept",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordCodeAcceptBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Accept the password reset verification code",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/forgot_password/code/verify": {
            "post": {
                "description": "Accessible by: all users",
                "operationId": "post_/api/signup/forgot_password/code/verify",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordCodeVerifyBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check if password reset verification code is valid",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/forgot_password/email/send": {
            "post": {
                "description": "Accessible by: all users",
                "operationId": "post_/api/signup/forgot_password/email/send",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordEmailSendBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Send an email with new verification code for users who want to reset password",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/remind": {
            "get": {
                "description": "This endpoint should be pinged daily by a cron job. It checks for unverified users from the past 2 months. - if a user has signed up the day before, a reminder email is sent - if a user has signed up for 7 days, a second reminder is sent - if a user is older than 14 days, delete them meta_json tracks how many e-mails have been sent, so we don't send too many\n\nalso sends a test email to help@petal.org to make sure support line is open.\n\nAccessible by: all users",
                "operationId": "get_/api/signup/remind",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupRemindResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Send reminders to users who have signed up but not verified (set a password, gone through the onboarding, status ends in \"accepted\")",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/user/permitted": {
            "get": {
                "description": "Check if user exists and has previous signup record Possible verification statuses: Referral sent Verification sent Referral accepted Verification accepted Oauth accepted Unknown Nonexistent\n\nAccessible by: all users",
                "operationId": "get_/api/signup/user/permitted",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "email",
                        "required": true,
                        "schema": {
                            "title": "Email",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SignupUserPermittedResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check if signup email can be sent to the address",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/signup/verification/status": {
            "get": {
                "description": "Uses SendGrid API to check the status of the verification email that was most recently sent.\n\nAccessible by: all users",
                "operationId": "get_/api/signup/verification/status",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "email",
                        "required": true,
                        "schema": {
                            "title": "Email",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerificationStatusResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Check status of verification email",
                "tags": [
                    "signup"
                ]
            }
        },
        "/api/tag/create": {
            "post": {
                "description": "The optional add_document_ids will add those documents to the created tag.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a tag",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/create_many": {
            "post": {
                "description": "This endpoint will use an existing tag with the same name if possible. The optional add_document_ids will add those documents to the created tags.\n\nAccessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/create_many",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCreateManyBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create multiple tags",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/rule/create": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/rule/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoTaggingRuleCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoTaggingRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create an auto tagging rule",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/rule/{rule_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/tag/rule/{rule_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoTaggingRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read information of an auto tagging rule",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/rule/{rule_id}/add_tags": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/rule/{rule_id}/add_tags",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoTaggingRuleAddTagsBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoTaggingRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Add tags to auto tagging rule",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/rule/{rule_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/tag/rule/{rule_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete an auto tagging rule",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/rule/{rule_id}/remove_tags": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/rule/{rule_id}/remove_tags",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoTaggingRuleAddTagsBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoTaggingRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Remove tags from auto tagging rule",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/rule/{rule_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/rule/{rule_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "rule_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AutoTaggingRuleUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoTaggingRule"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update an auto tagging rule",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/{tag_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/tag/{tag_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "tag_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read information of a tag",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/{tag_id}/add_documents": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/{tag_id}/add_documents",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "tag_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagAddDocumentsBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Add tag to documents",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/{tag_id}/delete": {
            "delete": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "delete_/api/tag/{tag_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "tag_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete a tag",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/{tag_id}/document/list": {
            "get": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "get_/api/tag/{tag_id}/document/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "tag_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List documents that have this tag",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/{tag_id}/remove_documents": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/{tag_id}/remove_documents",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "tag_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagAddDocumentsBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Remove tag from documents",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/tag/{tag_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users within organization",
                "operationId": "post_/api/tag/{tag_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "tag_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update a tag",
                "tags": [
                    "tag"
                ]
            }
        },
        "/api/task_info/{job_id}": {
            "get": {
                "description": "Accessible by: all users",
                "operationId": "get_/api/task_info/{job_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "job_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Checks for status of given job_id",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/telemetry": {
            "post": {
                "description": "Accessible by: all users",
                "operationId": "post_/api/telemetry",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TelemetryList"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Periodically collect telemetry data from the front end",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/telemetry/list": {
            "get": {
                "description": "created_before and created_after in query allows for filtering telemetries within specified timeframe\n\nAccessible by: petal",
                "operationId": "get_/api/telemetry/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "query",
                        "name": "user_id",
                        "required": false,
                        "schema": {
                            "title": "User ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "organization_id",
                        "required": false,
                        "schema": {
                            "title": "Organization ID",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "action",
                        "required": false,
                        "schema": {
                            "title": "Action",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "created_before",
                        "required": false,
                        "schema": {
                            "title": "Created Before",
                            "type": "string"
                        }
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "created_after",
                        "required": false,
                        "schema": {
                            "title": "Created After",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TelemetryList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all telemetries for certain user, organization, or action",
                "tags": [
                    "main"
                ]
            }
        },
        "/api/user/create": {
            "post": {
                "description": "Accessible by: all users",
                "operationId": "post_/api/user/create",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create a user",
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/list": {
            "get": {
                "description": "Accessible by: petal",
                "operationId": "get_/api/user/list",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserExtraDetailedList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all users",
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/metrics/daily": {
            "get": {
                "description": "Currently supplies - signup count per last 7 days - weekly unique user count (active in last 7 days on a day different from when they signed up) - monthly unique user count (active in last 30 days on a day different from when they signed up)\n\nAccessible by: everyone",
                "operationId": "get_/api/user/metrics/daily",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMetricsDaily"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Supply user metrics that are updated once per day",
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/metrics/hourly": {
            "get": {
                "description": "Currently supplies - number of unique active users over the past hour - signup count per last 24 hours - daily recurring user count (signed up for at least 2 days, active in past day)\n\nAccessible by: everyone",
                "operationId": "get_/api/user/metrics/hourly",
                "parameters": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserMetricsHourly"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Supply user metrics that are updated once per hour",
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/{user_id}": {
            "get": {
                "description": "Accessible by: petal and authorized users reading their own information",
                "operationId": "get_/api/user/{user_id}",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Read user information",
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/{user_id}/delete": {
            "delete": {
                "description": "Also deletes their personal organization if it exists.\n\nAccessible by: petal and authorized users deleting their own entries",
                "operationId": "delete_/api/user/{user_id}/delete",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Delete a user",
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/{user_id}/document/list": {
            "get": {
                "description": "Accessible by: petal and authorized users listing their own documents",
                "operationId": "get_/api/user/{user_id}/document/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all documents created by a user",
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/{user_id}/organization/create": {
            "post": {
                "description": "Accessible by: petal and authorized users creating their own organizations",
                "operationId": "post_/api/user/{user_id}/organization/create",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Create personal organization (if it does not exist)",
                "tags": [
                    "user",
                    "organization"
                ]
            }
        },
        "/api/user/{user_id}/organization/join": {
            "post": {
                "description": "Petal only; the public should use invite system\n\nAccessible by: petal",
                "operationId": "post_/api/user/{user_id}/organization/join",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserJoinOrganizationBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "User joins organization",
                "tags": [
                    "user",
                    "organization"
                ]
            }
        },
        "/api/user/{user_id}/organization/leave": {
            "post": {
                "description": "Accessible by: petal and authorized users leaving on their own",
                "operationId": "post_/api/user/{user_id}/organization/leave",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLeaveOrganizationBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "User leaves organization",
                "tags": [
                    "user",
                    "organization"
                ]
            }
        },
        "/api/user/{user_id}/organization/list": {
            "get": {
                "description": "List all Organizations a given user is part of",
                "operationId": "get_/api/user/{user_id}/organization/list",
                "parameters": [
                    {
                        "description": "The unique ID of the user",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all organizations of which the user is a member",
                "tags": [
                    "user",
                    "organization"
                ]
            }
        },
        "/api/user/{user_id}/referral/list": {
            "get": {
                "description": "Accessible by: petal and authorized users viewing their own sent referrals",
                "operationId": "get_/api/user/{user_id}/referral/list",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReferralList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "List all referrals sent by a given user",
                "tags": [
                    "user",
                    "referral"
                ]
            }
        },
        "/api/user/{user_id}/referral/received": {
            "get": {
                "description": "Accessible by: petal and authorized users viewing their own referral",
                "operationId": "get_/api/user/{user_id}/referral/received",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Referral"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Returns the referral that the user accepted when they signed up, if any",
                "tags": [
                    "user",
                    "referral"
                ]
            }
        },
        "/api/user/{user_id}/update": {
            "post": {
                "description": "Accessible by: petal and authorized users updating their own information",
                "operationId": "post_/api/user/{user_id}/update",
                "parameters": [
                    {
                        "description": "",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailed"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    }
                },
                "summary": "Update user information",
                "tags": [
                    "user"
                ]
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "signup"
        },
        {
            "name": "extraction"
        },
        {
            "name": "referral"
        },
        {
            "name": "site"
        },
        {
            "name": "citegen"
        },
        {
            "name": "invite"
        },
        {
            "name": "user"
        },
        {
            "name": "tag"
        },
        {
            "name": "ai"
        },
        {
            "name": "notification"
        },
        {
            "name": "organization"
        },
        {
            "name": "annotation"
        },
        {
            "name": "search"
        },
        {
            "name": "attachment"
        },
        {
            "name": "collection"
        },
        {
            "name": "discourse"
        },
        {
            "name": "main"
        },
        {
            "name": "ai-create"
        },
        {
            "name": "document"
        },
        {
            "name": "payment"
        },
        {
            "name": "comment"
        },
        {
            "name": "lambda"
        },
        {
            "name": "sauce"
        },
        {
            "name": "admin"
        },
        {
            "name": "error"
        },
        {
            "name": "opengraph"
        },
        {
            "name": "default"
        },
        {
            "name": "media"
        },
        {
            "name": "file"
        },
        {
            "name": "oauth"
        }
    ]
}